[{"F:\\msgAdmin\\msg\\src\\index.js":"1","F:\\msgAdmin\\msg\\src\\reportWebVitals.js":"2","F:\\msgAdmin\\msg\\src\\App.js":"3","F:\\ink-room-react-management\\src\\index.js":"4","F:\\ink-room-react-management\\src\\api\\http.js":"5","F:\\ink-room-react-management\\src\\reportWebVitals.js":"6","F:\\ink-room-react-management\\src\\App.js":"7","F:\\ink-room-react-management\\src\\routers\\index.js":"8","F:\\ink-room-react-management\\src\\pages\\admin\\console\\carousel\\CarouselEdit.jsx":"9","F:\\ink-room-react-management\\src\\pages\\admin\\shop\\carousel\\CarouselEdit.jsx":"10","F:\\ink-room-react-management\\src\\pages\\admin\\console\\setting\\Setting.jsx":"11","F:\\ink-room-react-management\\src\\pages\\Login.jsx":"12","F:\\ink-room-react-management\\src\\pages\\PageNotFound.jsx":"13","F:\\ink-room-react-management\\src\\components\\Frame\\Index.jsx":"14","F:\\ink-room-react-management\\src\\pages\\admin\\console\\active\\ActiveRegister.jsx":"15","F:\\ink-room-react-management\\src\\pages\\admin\\console\\active\\ActiveList.jsx":"16","F:\\ink-room-react-management\\src\\pages\\admin\\console\\article\\ArticleList.jsx":"17","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\CourseList.jsx":"18","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\CourseRegister.jsx":"19","F:\\ink-room-react-management\\src\\pages\\admin\\console\\active\\AddActive.jsx":"20","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\AddCourse.jsx":"21","F:\\ink-room-react-management\\src\\pages\\admin\\console\\artist\\ArtistShow.jsx":"22","F:\\ink-room-react-management\\src\\pages\\admin\\console\\examine\\ArticleExamine.jsx":"23","F:\\ink-room-react-management\\src\\pages\\admin\\console\\display\\Display.jsx":"24","F:\\ink-room-react-management\\src\\pages\\admin\\console\\examine\\PhotoExamine.jsx":"25","F:\\ink-room-react-management\\src\\pages\\admin\\shop\\order\\OrderList.jsx":"26","F:\\ink-room-react-management\\src\\pages\\admin\\console\\type\\TypeSetting.jsx":"27","F:\\ink-room-react-management\\src\\pages\\admin\\shop\\shop\\ShopList.jsx":"28","F:\\ink-room-react-management\\src\\pages\\admin\\console\\type\\Cover.jsx":"29","F:\\ink-room-react-management\\src\\pages\\admin\\shop\\shop\\AddShop.jsx":"30","F:\\ink-room-react-management\\src\\pages\\admin\\user\\userList\\UserList.jsx":"31","F:\\ink-room-react-management\\src\\api\\shopApi.js":"32","F:\\ink-room-react-management\\src\\api\\consoleApi.js":"33","F:\\ink-room-react-management\\src\\api\\systemApi.js":"34","F:\\ink-room-react-management\\src\\api\\userApi.js":"35","F:\\ink-room-react-management\\src\\components\\User.jsx":"36","F:\\ink-room-react-management\\src\\components\\Shop.jsx":"37","F:\\ink-room-react-management\\src\\pages\\admin\\user\\userList\\UserEdit.jsx":"38","F:\\ink-room-react-management\\src\\utils\\timeFormat.js":"39","F:\\ink-room-react-management\\src\\pages\\admin\\console\\artist\\EditArticleType.jsx":"40","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\CourseTable.jsx":"41","F:\\ink-room-react-management\\src\\pages\\admin\\console\\article\\AddArticle.jsx":"42","F:\\ink-room-react-management\\src\\components\\Console.jsx":"43"},{"size":875,"mtime":1608079359658,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1606894934413,"results":"46","hashOfConfig":"45"},{"size":598,"mtime":1628499828822,"results":"47","hashOfConfig":"45"},{"size":908,"mtime":1628817493277,"results":"48","hashOfConfig":"49"},{"size":1813,"mtime":1628817493274,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1628817493288,"results":"51","hashOfConfig":"49"},{"size":623,"mtime":1628817493273,"results":"52","hashOfConfig":"49"},{"size":3517,"mtime":1628817493288,"results":"53","hashOfConfig":"49"},{"size":5416,"mtime":1628817493280,"results":"54","hashOfConfig":"49"},{"size":4888,"mtime":1628817493285,"results":"55","hashOfConfig":"49"},{"size":1482,"mtime":1628817493283,"results":"56","hashOfConfig":"49"},{"size":2821,"mtime":1628817493277,"results":"57","hashOfConfig":"49"},{"size":159,"mtime":1628817493277,"results":"58","hashOfConfig":"49"},{"size":2584,"mtime":1628817493276,"results":"59","hashOfConfig":"49"},{"size":1761,"mtime":1628817493278,"results":"60","hashOfConfig":"49"},{"size":6701,"mtime":1628817493278,"results":"61","hashOfConfig":"49"},{"size":5949,"mtime":1628817493279,"results":"62","hashOfConfig":"49"},{"size":700,"mtime":1628817493281,"results":"63","hashOfConfig":"49"},{"size":1742,"mtime":1628817493281,"results":"64","hashOfConfig":"49"},{"size":10334,"mtime":1628817493279,"results":"65","hashOfConfig":"49"},{"size":10314,"mtime":1628817493281,"results":"66","hashOfConfig":"49"},{"size":5081,"mtime":1628817493280,"results":"67","hashOfConfig":"49"},{"size":4105,"mtime":1630412906934,"results":"68","hashOfConfig":"49"},{"size":2419,"mtime":1628817493282,"results":"69","hashOfConfig":"49"},{"size":4032,"mtime":1628817493283,"results":"70","hashOfConfig":"49"},{"size":8014,"mtime":1628817493285,"results":"71","hashOfConfig":"49"},{"size":5670,"mtime":1630412521294,"results":"72","hashOfConfig":"49"},{"size":6247,"mtime":1628817493286,"results":"73","hashOfConfig":"49"},{"size":3365,"mtime":1630412559200,"results":"74","hashOfConfig":"49"},{"size":12916,"mtime":1628817493286,"results":"75","hashOfConfig":"49"},{"size":5272,"mtime":1628817493287,"results":"76","hashOfConfig":"49"},{"size":2599,"mtime":1628817493274,"results":"77","hashOfConfig":"49"},{"size":6309,"mtime":1628817493274,"results":"78","hashOfConfig":"49"},{"size":595,"mtime":1628817493274,"results":"79","hashOfConfig":"49"},{"size":623,"mtime":1628817493274,"results":"80","hashOfConfig":"49"},{"size":845,"mtime":1628817493276,"results":"81","hashOfConfig":"49"},{"size":1376,"mtime":1628817493276,"results":"82","hashOfConfig":"49"},{"size":3284,"mtime":1628817493287,"results":"83","hashOfConfig":"49"},{"size":221,"mtime":1628817493289,"results":"84","hashOfConfig":"49"},{"size":7459,"mtime":1628817493280,"results":"85","hashOfConfig":"49"},{"size":6697,"mtime":1628817493282,"results":"86","hashOfConfig":"49"},{"size":10315,"mtime":1628817493279,"results":"87","hashOfConfig":"49"},{"size":4074,"mtime":1628817493275,"results":"88","hashOfConfig":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"163184r",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"1uv67l7",{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"99"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"99"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"99"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"99"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"99"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"99"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"99"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"F:\\msgAdmin\\msg\\src\\index.js",[],"F:\\msgAdmin\\msg\\src\\reportWebVitals.js",[],"F:\\msgAdmin\\msg\\src\\App.js",["205"],"import { Switch , Redirect , Route} from \"react-router-dom\";\nimport { adminRoutes } from \"./routers\";\nimport Frame from './components/Frame/Index'\nimport './App.css'\nimport Login from \"./pages/Login\";\n\nfunction App() {\n  return (\n    <>\n    {sessionStorage.getItem(\"isLogin\")?(\n      <Frame>\n        <Switch>\n          {adminRoutes.map(route=>(\n            <Route path={route.path} key={route.path} exact component={route.component} />\n          ))} \n          <Redirect to=\"/admin/console\"/>\n        </Switch>\n    </Frame>\n    ):<Redirect to=\"/login\"/>}\n      \n    </>\n  );\n}\n\nexport default App;\n",["206","207"],"F:\\ink-room-react-management\\src\\index.js",[],["208","209"],"F:\\ink-room-react-management\\src\\api\\http.js",["210"],"import axios from 'axios'\r\nimport { message } from 'antd';\r\nexport const ConfigBaseURL = process.env.NODE_ENV == \"development\" ? \"http://localhost:8080\" : \"https://www.ksdhy.xyz\"\r\nlet hide = null;\r\n//使用create方法创建axios实例\r\nexport const Service = axios.create({\r\n  timeout: 7000, // 请求超时时间\r\n  baseURL: ConfigBaseURL,\r\n  headers: {\r\n    'Content-Type': 'application/json;charset=UTF-8',\r\n    // refresh_token:'refresh_token',\r\n    // access_token:'eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJmZDc0MzQ0Ny1hNzE5LTQ4YjQtYTQyMS00YTIyYzg1NjA4ZTIiLCJpYXQiOjE2Mjg0NzgwMzcsImV4cCI6MTYyODQ3OTgzNywidXNlcklkIjoxMDAyfQ.wbTU2ctCgbMRuMVquO_ivwR3o65qIRoJnv2uv6-bc9s'\r\n  },\r\n})\r\n// 添加请求拦截器\r\nService.interceptors.request.use(config => {\r\n  console.log(config);\r\n   hide=message.loading(\"内容载入中...\")\r\n  return config\r\n},error=>{\r\n    hide()\r\n    message.error(\"加载失败，请检查网络！\")\r\n})\r\n// 添加响应拦截器\r\nService.interceptors.response.use(response => {\r\n  // console.log(response)\r\n    hide()\r\n  return {data:response.data,code:response.code}\r\n}, error => {\r\n  // console.log(error)\r\n    hide()\r\n    message.error(\"加载失败，请检查网络！\")\r\n    return Promise.reject(error)\r\n})\r\n\r\n\r\nexport function get(url,params = {}){\r\n    return new Promise((resolve, reject) => {\r\n        Service.get(url, {\r\n            params: params,\r\n          }).then((response) => {\r\n            resolve(response);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n}\r\n\r\n\r\nexport function post(url,data = {}){\r\n    return new Promise((resolve, reject) => {\r\n        Service.post(url, data).then((response) => {\r\n            resolve(response.data);\r\n           },(err) => {\r\n           reject(err);\r\n         }\r\n       );\r\n   });\r\n}\r\n\r\n","F:\\ink-room-react-management\\src\\reportWebVitals.js",[],"F:\\ink-room-react-management\\src\\App.js",["211"],"import { Switch , Redirect , Route} from \"react-router-dom\";\r\nimport { adminRoutes } from \"./routers\";\r\nimport Frame from './components/Frame/Index'\r\nimport './App.css'\r\nimport Login from \"./pages/Login\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    {sessionStorage.getItem(\"isLogin\")?(\r\n      <Frame>\r\n        <Switch>\r\n          {adminRoutes.map(route=>(\r\n            <Route path={route.path} key={route.path} exact component={route.component} />\r\n          ))} \r\n          <Redirect to=\"/admin/console\"/>\r\n        </Switch>\r\n    </Frame>\r\n    ):<Redirect to=\"/login\"/>}\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\ink-room-react-management\\src\\routers\\index.js",["212","213","214","215","216"],"import Login from \"../pages/Login\";\r\nimport PageNotFound from \"../pages/PageNotFound\";\r\n\r\nimport ActiveList from '../pages/admin/console/active/ActiveList'\r\nimport ActiveRegister from '../pages/admin/console/active/ActiveRegister'\r\nimport AddActive from '../pages/admin/console/active/AddActive'\r\n\r\nimport ArticleList from '../pages/admin/console/article/ArticleList'\r\n\r\nimport CourseList from '../pages/admin/console/course/CourseList'\r\nimport CourseRegister from '../pages/admin/console/course/CourseRegister'\r\nimport AddCourse from '../pages/admin/console/course/AddCourse'\r\n\r\nimport ArtistShow from '../pages/admin/console/artist/ArtistShow'\r\n\r\n\r\n\r\nimport Carousel from '../pages/admin/console/carousel/CarouselEdit.jsx'\r\n\r\nimport ArticleExamine from '../pages/admin/console/examine/ArticleExamine'\r\nimport PhotoExamine from '../pages/admin/console/examine/PhotoExamine'\r\nimport Setting from \"../pages/admin/console/setting/Setting.jsx\";\r\nimport Cover from \"../pages/admin/console/type/Cover\";\r\nimport TypeSetting from \"../pages/admin/console/type/TypeSetting\";\r\nimport CarouselEdit from \"../pages/admin/shop/carousel/CarouselEdit.jsx\";\r\nimport OrderList from \"../pages/admin/shop/order/OrderList\";\r\nimport AddShop from \"../pages/admin/shop/shop/AddShop\";\r\nimport ShopList from \"../pages/admin/shop/shop/ShopList\";\r\nimport UserList from \"../pages/admin/user/userList/UserList\";\r\nimport Display from \"../pages/admin/console/display/Display\";\r\n\r\n\r\n\r\nexport const mainRoutes = [\r\n\t{\r\n\t\tpath:'/login',\r\n\t\tcomponent:Login\r\n\t},\r\n\t{\r\n\t\tpath:'/404',\r\n\t\tcomponent:PageNotFound\r\n\t}\r\n]\r\n\r\n\r\nexport const nav = [\r\n\t{\r\n\t\ttitle:'控制台',\r\n\t\tpath:'/admin/console',\r\n\t\troute:[]\r\n\t},\r\n\t{\r\n\t\ttitle:'商品管理',\r\n\t\tpath:'/admin/shop',\r\n\t\troute:[]\r\n\t},\r\n\t{\r\n\t\ttitle:'用户管理',\r\n\t\tpath:'/admin/user',\r\n\t\troute:[]\r\n\t}\r\n]\r\n\r\n\r\n\r\n\t// 控制台\r\nconst console = [\r\n\t{\r\n\t\tpath:'/admin/console',\r\n\t\tcomponent:Display\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/display',\r\n\t\tcomponent:Display\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/carousel',\r\n\t\tcomponent:Carousel\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/active/activeList',\r\n\t\tcomponent:ActiveList\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/article/articleList',\r\n\t\tcomponent:ArticleList\r\n\t},\r\n\t// {\r\n\t// \tpath:'/admin/console/addActive',\r\n\t// \tcomponent:AddActive\r\n\t// },\r\n\t// {\r\n\t// \tpath:'/admin/console/addCourse',\r\n\t// \tcomponent:AddCourse\r\n\t// },\r\n\t{\r\n\t\tpath:'/admin/console/courseList',\r\n\t\tcomponent:CourseList\r\n\t},\r\n\t// {\r\n\t// \tpath:'/admin/console/courseRegister',\r\n\t// \tcomponent:CourseRegister\r\n\t// },\r\n\t \r\n\t{\r\n\t\tpath:'/admin/console/setting',\r\n\t\tcomponent:Setting\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/ArticleExamine',\r\n\t\tcomponent:ArticleExamine\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/photoExamine',\r\n\t\tcomponent:PhotoExamine\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/cover',\r\n\t\tcomponent:Cover\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/typeSetting',\r\n\t\tcomponent:TypeSetting\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/console/artistShow',\r\n\t\tcomponent:ArtistShow\r\n\t}\r\n\r\n]\r\n\r\n\r\nconst shop = [\r\n\t{\r\n\t\tpath:'/admin/shop',\r\n\t\tcomponent:CarouselEdit\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/shop/carouselEdit',\r\n\t\tcomponent:CarouselEdit\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/shop/orderList',\r\n\t\tcomponent:OrderList\r\n\t},\r\n\t// {\r\n\t// \tpath:'/admin/shop/addShop',\r\n\t// \tcomponent:AddShop\r\n\t// },\r\n\t{\r\n\t\tpath:'/admin/shop/shopList',\r\n\t\tcomponent:ShopList\r\n\t},\r\n\t\r\n]\r\n\r\nconst user = [\r\n\t{\r\n\t\tpath:'/admin/user',\r\n\t\tcomponent:UserList\r\n\t},\r\n\t{\r\n\t\tpath:'/admin/user/userList',\r\n\t\tcomponent:UserList\r\n\t}\r\n]\r\n\r\n\r\n\r\nexport const adminRoutes = [\r\n\t...console,\r\n\t...shop,\r\n\t...user\r\n\t\r\n\r\n\t\r\n]","F:\\ink-room-react-management\\src\\pages\\admin\\console\\carousel\\CarouselEdit.jsx",["217","218","219","220","221"],"import { Button, Card,Image,Modal,Form, Input,  Radio,Upload ,message} from 'antd';\r\nimport React,{useState,useEffect} from 'react'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\nimport {getBannerList,editBanner,addBanner} from '../../../../api/consoleApi'\r\nimport ImgCrop from 'antd-img-crop';\r\nimport './CarouselEdit.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 8,\r\n  },\r\n};\r\n\r\n\r\nconst CarouselEdit = (params) => {\r\n\r\n  const [bannerList, setBannerList] = useState([]) // banner数据\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // 弹窗显示状态\r\n  const [item, setItem] = useState({}); // 当前操作的轮播项\r\n  const [fileList, setFileList] = useState([]); // 上传文件列表\r\n  const [filePath , setFilePath] = useState(\"\"); // 文件路径\r\n\r\n  const fetchData = async function() {\r\n    const response = await getBannerList();\r\n    setBannerList(response.data)\r\n  }\r\n\r\n \r\n  useEffect(() => {\r\n    fetchData();\r\n  },[])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(!isModalVisible){\r\n      setItem({})\r\n      setFilePath(\"\")\r\n      setFileList([])\r\n    }\r\n  },[isModalVisible])\r\n\r\n  \r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    \r\n    \r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n\r\n  const onFinish = async (values) => {\r\n    let data = {...values,path:filePath || item.path.replace(ConfigBaseURL,\"\")}\r\n    if(item.id){\r\n      // 修改\r\n       let res = await editBanner({...data,id:item.id})\r\n       if(res.code == 200){\r\n        handleOk();\r\n        message.success(\"修改成功\")\r\n        fetchData()\r\n      }else if(res.code == 400){\r\n        message.error(\"修改失败，该活动或课程不存在！\")\r\n      }\r\n    }else{\r\n      // 添加\r\n      let res = await addBanner(data)\r\n      if(res.code == 200){\r\n        handleOk();\r\n        message.success(\"添加成功\")\r\n        fetchData()\r\n      }else if(res.code == 400){\r\n        message.error(\"添加失败，该活动或课程不存在！\")\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n\r\n\r\nconst onChange = ({ fileList: newFileList }) => {\r\n  setFileList(newFileList);\r\n  if(newFileList[0].response){\r\n    if(newFileList[0].response.storageAddress)\r\n    {\r\n\r\n      setFilePath(newFileList[0].response.storageAddress)\r\n    }\r\n    else{\r\n      message.error('图片上传失败，请检查网络');\r\n    }\r\n  }\r\n};\r\n\r\n  return (\r\n  <>\r\n  建议尺寸：390x150\r\n  <Button style={{marginBottom:20}} onClick={()=>{\r\n    showModal()\r\n  }}>新增轮播项</Button>\r\n  {\r\n    bannerList.map((item,index)=>(\r\n      <Card key={item.id} \r\n        style={{marginBottom:20}}\r\n        title={\r\n        <div style={{display:'flex'}}>\r\n          <div>\r\n            {'首页轮播图'+(index+1)}\r\n          </div>\r\n          <div style={{marginLeft:'auto'}}>\r\n            <Button type=\"primary\" onClick={()=>{\r\n              showModal();\r\n              setItem(bannerList[index])\r\n            }}>编辑</Button>\r\n          </div>\r\n        </div>\r\n      }>\r\n       <div style={{display:'flex'}}>\r\n       <div>\r\n          <Image src={item.path} style={{maxWidth:800}}></Image>\r\n        </div>\r\n        <div style={{display:'flex',flexFlow:'column' ,paddingLeft:150,justifyContent:'center'}}>\r\n          <h2>跳转的页面类型:{item.pageType == 'active'?'活动':'课程'}</h2>\r\n          <h2>跳转到该类型的id:{item.pageId}</h2>\r\n        </div>\r\n       </div>\r\n      </Card>\r\n\r\n      \r\n    ))\r\n  }\r\n\r\n    <Modal title={item.id?item.id:'新增轮播项'} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose={true} footer={null}>\r\n    <Form\r\n      {...layout}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n     \r\n      <ImgCrop aspect={390/150}>\r\n            <Upload\r\n              action={ConfigBaseURL+'/uploadBanner'} \r\n              listType=\"picture-card\"\r\n              fileList={fileList}\r\n              onChange={onChange}\r\n              name=\"banner\"\r\n            >\r\n          {fileList.length < 1 && '+ 上传'}\r\n        </Upload>\r\n      </ImgCrop>\r\n      {\r\n        item.id?<span style={{color:'red'}}>(如果修改图片则点击上传，不修改图片直接提交)</span>:''\r\n      }\r\n      <Form.Item \r\n        name=\"pageType\"  \r\n        label=\"跳转的页面类型\"\r\n        initialValue={item.pageType}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择页面类型',\r\n          },\r\n        ]}>\r\n        <Radio.Group>\r\n          <Radio value='active'>活动</Radio>\r\n          <Radio value='course'>课程</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        label=\"跳转的页面id\"\r\n        name=\"pageId\"\r\n        initialValue={item.pageId}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入页面id',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      \r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          确认\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Modal>\r\n  </>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default CarouselEdit\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\shop\\carousel\\CarouselEdit.jsx",["222","223","224","225","226"],"import { Button, Card,Image,Modal,Form, Input,  Radio,Upload ,message} from 'antd';\r\nimport React,{useState,useEffect} from 'react'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\nimport {getBannerList,editBanner,addBanner} from '../../../../api/shopApi'\r\nimport ImgCrop from 'antd-img-crop';\r\n// import './CarouselEdit.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 8,\r\n  },\r\n};\r\n\r\n\r\nconst CarouselEdit = (params) => {\r\n\r\n  const [bannerList, setBannerList] = useState([]) // banner数据\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // 弹窗显示状态\r\n  const [item, setItem] = useState({}); // 当前操作的轮播项\r\n  const [fileList, setFileList] = useState([]); // 上传文件列表\r\n  const [filePath , setFilePath] = useState(\"\"); // 文件路径\r\n\r\n  const fetchData = async function() {\r\n    const response = await getBannerList();\r\n    setBannerList(response.data)\r\n  }\r\n\r\n \r\n  useEffect(() => {\r\n    fetchData();\r\n  },[])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(!isModalVisible){\r\n      setItem({})\r\n      setFilePath(\"\")\r\n      setFileList([])\r\n    }\r\n  },[isModalVisible])\r\n\r\n  \r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    \r\n    \r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n\r\n  const onFinish = async (values) => {\r\n    let data = {...values,pageType:'shop',path:filePath || item.path.replace(ConfigBaseURL,\"\")}\r\n    if(item.id){\r\n      // 修改\r\n       let res = await editBanner({...data,id:item.id})\r\n       if(res.code == 200){\r\n        handleOk();\r\n        message.success(\"修改成功\")\r\n        fetchData()\r\n      }else if(res.code == 400){\r\n        message.error(\"修改失败，该商品不存在！\")\r\n      }\r\n    }else{\r\n      // 添加\r\n      let res = await addBanner(data)\r\n      if(res.code == 200){\r\n        handleOk();\r\n        message.success(\"添加成功\")\r\n        fetchData()\r\n      }else if(res.code == 400){\r\n        message.error(\"添加失败，该商品不存在！\")\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n\r\n\r\nconst onChange = ({ fileList: newFileList }) => {\r\n  setFileList(newFileList);\r\n  if(newFileList[0].response){\r\n    if(newFileList[0].response.storageAddress)\r\n    {\r\n\r\n      setFilePath(newFileList[0].response.storageAddress)\r\n    }\r\n    else{\r\n      message.error('图片上传失败，请检查网络');\r\n    }\r\n  }\r\n};\r\n\r\n  return (\r\n  <>\r\n  <Button style={{marginBottom:20}} onClick={()=>{\r\n    showModal()\r\n  }}>新增轮播项</Button>\r\n  {\r\n    bannerList.map((item,index)=>(\r\n      <Card key={item.id} \r\n        style={{marginBottom:20}}\r\n        title={\r\n        <div style={{display:'flex'}}>\r\n          <div>\r\n            {'首页轮播图'+(index+1)}\r\n          </div>\r\n          <div style={{marginLeft:'auto'}}>\r\n            <Button type=\"primary\" onClick={()=>{\r\n              showModal();\r\n              setItem(bannerList[index])\r\n            }}>编辑</Button>\r\n          </div>\r\n        </div>\r\n      }>\r\n       <div style={{display:'flex'}}>\r\n       <div>\r\n          <Image src={item.path} style={{maxWidth:800}}></Image>\r\n        </div>\r\n        <div style={{display:'flex',flexFlow:'column' ,paddingLeft:150,justifyContent:'center'}}>\r\n          <h2>跳转到该商品的id:{item.pageId}</h2>\r\n        </div>\r\n       </div>\r\n      </Card>\r\n\r\n      \r\n    ))\r\n  }\r\n\r\n    <Modal title={item.id?item.id:'新增轮播项'} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} destroyOnClose={true} footer={null}>\r\n    <Form\r\n      {...layout}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n     \r\n      <ImgCrop aspect={1920/1080}>\r\n            <Upload\r\n              action={ConfigBaseURL+'/uploadBanner'} \r\n              listType=\"picture-card\"\r\n              fileList={fileList}\r\n              onChange={onChange}\r\n              name=\"banner\"\r\n            >\r\n          {fileList.length < 1 && '+ 上传'}\r\n        </Upload>\r\n      </ImgCrop>\r\n      {\r\n        item.id?<span style={{color:'red'}}>(如果修改图片则点击上传，不修改图片直接提交)</span>:''\r\n      }\r\n      \r\n\r\n      <Form.Item\r\n        label=\"跳转的商品id\"\r\n        name=\"pageId\"\r\n        initialValue={item.pageId}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入商品id',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      \r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          确认\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Modal>\r\n  </>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default CarouselEdit\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\setting\\Setting.jsx",["227","228","229"],"import React,{useEffect,useState} from 'react'\r\nimport { editSetting, getSetting } from '../../../../api/consoleApi'\r\nimport {Button, Form, Switch} from 'antd'\r\n\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n\r\n\r\n\r\nfunction Setting() {\r\n    const [list, setList] = useState([])\r\n    const getData = async() =>{\r\n        let res = await getSetting();\r\n        setList(res)\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    function onChange(checked) {\r\n        console.log(`switch to ${checked}`);\r\n      }\r\n      const onFinish =async(e)=>{\r\n        let res = await editSetting({\r\n            id:Object.keys(e)[0],\r\n            value:e[1]\r\n        })\r\n        console.log(res);\r\n      }\r\n      const onFinishFailed =(e)=>{\r\n        console.log(e);\r\n      }\r\n    return (\r\n        <Form  \r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed} >\r\n        <div>\r\n            {\r\n                list.map(item=>(\r\n                    <Form.Item\r\n                        label={item.name}\r\n                        name={item.id}>\r\n                        <Switch  defaultChecked={item.value==0?false:true} onChange={onChange} />\r\n                    </Form.Item>\r\n                ))\r\n            }\r\n            <Button type=\"primary\" htmlType=\"submit\">保存设置</Button>\r\n        </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Setting\r\n","F:\\ink-room-react-management\\src\\pages\\Login.jsx",["230"],"import React from 'react'\r\nimport { ConfigBaseURL } from '../api/http'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport { login } from '../api/systemApi';\r\n\r\nfunction Login() {\r\n    const onFinish = async (values) => {\r\n       let res = await login(values)\r\n       if(res.status){\r\n           sessionStorage.setItem(\"isLogin\",true)\r\n           message.success(\"登陆成功\")\r\n           setTimeout(() => {\r\n               window.location.href = \"/\"\r\n           }, 1000);\r\n       }else{\r\n        message.error(\"登陆失败，请检查用户名或密码\")\r\n       }\r\n      };\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n    return (\r\n        <div style={{\r\n            display:'flex',\r\n            flexFlow:'column',\r\n            alignItems:'center',\r\n            justifyContent:'center', \r\n             width:'100%',height:'100%',\r\n             backgroundImage:`url(\"${ConfigBaseURL}/images/background/bg.jpg\")`\r\n             }}>\r\n            <h1 style={{marginBottom:50}}>墨色间后台管理系统</h1>\r\n            <div style={{\r\n                width:500,\r\n                border:'1px solid #8c5c4a',\r\n                padding:'70px 70px 20px 20px',\r\n                boxSizing:'border-box'\r\n                }}>\r\n                \r\n            <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 8,\r\n            }}\r\n            wrapperCol={{\r\n                span: 16,\r\n            }}\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            >\r\n            <Form.Item\r\n                label=\"用户名\"\r\n                name=\"username\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: '请输入用户名!',\r\n                },\r\n                ]}\r\n            >\r\n                <Input autoComplete=\"false\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"密码\"\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: '请输入密码!',\r\n                },\r\n                ]}\r\n            >\r\n                <Input.Password autoComplete=\"false\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                offset: 8,\r\n                span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{backgroundColor:'#8c5c4a',border:'none'}}>\r\n                立即登录\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","F:\\ink-room-react-management\\src\\pages\\PageNotFound.jsx",[],"F:\\ink-room-react-management\\src\\components\\Frame\\Index.jsx",["231","232","233","234","235","236","237"],"import React,{useState} from 'react'\r\nimport { Layout, Menu, Breadcrumb,Button ,message} from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport {nav} from '../../routers/index'\r\nimport {Link,Route,Switch} from 'react-router-dom'\r\nimport Console from \"../Console\";\r\nimport Shop from \"../Shop\";\r\nimport User from \"../User\";\r\nimport './Index.css';\r\nimport logo from './logo.jpg'\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst init = function(){\r\n    let a = window.location.pathname + '/';\r\n    let b = a.indexOf(\"/\",7);\r\n    return a.substring(0,b)\r\n}\r\n\r\n\r\nfunction Index(props) {\r\n    const [defaultSelectedKeys, setDefaultSelectedKeys] = useState(init())\r\n    return (\r\n        <Layout>\r\n            <Header className=\"header\" style={{display:\"flex\"}}>\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"logo\" width='50'style={{marginRight:100}}/>\r\n            </div>\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[defaultSelectedKeys]}>\r\n                {nav.map(item=>(\r\n                    <Menu.Item key={item.path}>\r\n                      <Link to={item.path}>{item.title}</Link>\r\n                    </Menu.Item>\r\n                ))}\r\n            </Menu>\r\n            <div style={{color:'#fff',marginLeft:'auto'}}>\r\n                欢迎您，admin！\r\n                <Button type=\"link\" onClick={\r\n                    ()=>{\r\n                        sessionStorage.clear();\r\n                        message.success(\"退出成功\")\r\n                        setTimeout(() => {\r\n                            window.location.href = \"/\"\r\n                        }, 1000);\r\n                    }\r\n                }>退出登录</Button>\r\n            </div>\r\n            </Header>\r\n            <Layout>\r\n            <Switch>\r\n                <Route path=\"/admin/console\" component={Console} />\r\n                <Route path=\"/admin/Shop\" component={Shop} />\r\n                <Route path=\"/admin/User\" component={User} />\r\n            </Switch>\r\n            <Layout style={{ padding: '24px 24px' }}>\r\n                <Content\r\n                className=\"site-layout-background\"\r\n                style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 280,\r\n                    overflowY:'scroll'\r\n                }}\r\n                >\r\n                {props.children}\r\n                </Content>\r\n            </Layout>\r\n            </Layout>\r\n        </Layout>\r\n\r\n    )\r\n}\r\n\r\nexport default Index\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\active\\ActiveRegister.jsx",["238"],"import { Button, Table } from 'antd';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { getActiveReg } from '../../../../api/consoleApi';\r\nimport moment from 'moment'\r\nimport { ConfigBaseURL } from '../../../../api/http';\r\n\r\nfunction ActiveRegister(props) {\r\n    const [list, setList] = useState({})\r\n    const getData = async (items,page)=>{\r\n        let res = await getActiveReg({activeId:props.data.id,items,page})\r\n        setList(res)\r\n    }\r\n    useEffect(() => {\r\n        getData(10,1); \r\n       \r\n    }, [])\r\n\r\n\r\n   \r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        {\r\n          title: '报名用户',\r\n          dataIndex: 'userName',\r\n        },\r\n        {\r\n          title: '报名时间',\r\n          dataIndex: 'createTime',\r\n          render:(text, record, index) => (\r\n            moment(new Date(text)).format(\"YYYY-MM-DD\")\r\n          )\r\n        } \r\n      ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button><a href={ConfigBaseURL+'/console/getActiveExcel?activeId='+props.data.id}>导出excel</a></Button>\r\n            <Table \r\n                // title={props}\r\n                columns={columns}\r\n                dataSource={list.data}\r\n                rowKey={(record=>record.id)} \r\n                size=\"small\"\r\n                pagination={{\r\n                    total: list.total,\r\n                    showQuickJumper:true,\r\n                    showTotal:(total, range) => `共 ${total} 条记录`,\r\n                    onChange:(page, pageSize)=>{\r\n                      getData({items:10,page:page})\r\n                    }\r\n                  }}\r\n                bordered\r\n            />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveRegister\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\active\\ActiveList.jsx",["239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"import { Button,Table,Modal,Form, Input,  DatePicker, message  } from 'antd';\r\nimport React ,{useState,useEffect} from 'react'\r\nimport {getActive,delActive,searchActive} from '../../../../api/consoleApi'\r\nimport moment from 'moment'\r\nimport AddActive from './AddActive';\r\nimport ActiveRegister from './ActiveRegister';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nfunction ActiveList() {\r\n    const [activeList, setActiveList] = useState({})\r\n    const [operator, setOperator] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState()\r\n    const [data, setData] = useState({})\r\n    const [page,setPage] = useState(1)\r\n    const [isRegModalVisible, setIsRegModalVisible] = useState(false)\r\n\r\n  const getCourse = async(page) => {\r\n    let res = await getActive(page)\r\n    setActiveList(res)\r\n  }\r\n\r\n    useEffect(() => {\r\n      getCourse({page:1})\r\n    }, [])\r\n    \r\n\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        {\r\n          title: '活动名称',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: '活动开始时间',\r\n          dataIndex: 'startTime',\r\n          render:(text, record, index) => (\r\n            moment(new Date(text)).format(\"YYYY-MM-DD\")\r\n          )\r\n        },\r\n        {\r\n          title: '人数限制',\r\n          dataIndex: 'maxPeople',\r\n        },\r\n        {\r\n          title: '排序',\r\n          dataIndex: 'sort',\r\n        },\r\n        {\r\n            title: '操作',\r\n            align:'center',\r\n            render:(text, record, index)=>(\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                  <Button type=\"link\" onClick={()=>{\r\n                        setData(activeList.list[index])\r\n                        showRegModal()\r\n                    }}>报名详情</Button>\r\n                    <Button type=\"link\" onClick={()=>{\r\n                        setOperator('edit')\r\n                        setData(activeList.list[index])\r\n                        showModal()\r\n                    }}>详情</Button>\r\n                    <Button type=\"link\" danger  onClick={()=>{\r\n                        setOperator('delete')\r\n                        setData(activeList.list[index])\r\n                        showModal()\r\n                    }}>删除</Button>\r\n                </div>\r\n            )\r\n        },\r\n      ];\r\n\r\n\r\n    const childValue = (data)=>{\r\n        if(data){\r\n            message.success(\"操作成功\")\r\n            handleCancel()\r\n            getCourse({items:10,page:page})\r\n        }\r\n        else{\r\n            message.success(\"操作失败\")\r\n            handleCancel()\r\n        }\r\n    }\r\n    \r\n    const showRegModal = () => {\r\n\r\n      setIsRegModalVisible(true);\r\n    };\r\n  const handleRegCancel = () => {\r\n\r\n    setIsRegModalVisible(false);\r\n    };\r\n\r\n    const showModal = () => {\r\n\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n    const handleOk =async () => {\r\n        let res = await delActive({id:data.id});\r\n      if(res.code == 200){\r\n        message.success(\"删除成功\")\r\n        getCourse({items:10,page:page})\r\n      }else{\r\n        message.error(\"删除失败\")\r\n      }\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    };\r\n\r\n    const add = ()=>{\r\n        setOperator(\"add\")\r\n        showModal()\r\n    }\r\n\r\n    const onSearch =async (value,ev)=>{\r\n      if(ev){\r\n        if(ev.currentTarget.toString() == '[object HTMLButtonElement]'){\r\n          // 点了搜索按钮\r\n          if(value == \"\"){\r\n            message.error(\"请输入搜索内容\")\r\n            }else{\r\n              let res = await searchActive({key:value,page:1});\r\n              console.log(1);\r\n              setActiveList(res)\r\n            }\r\n        }else if(ev.currentTarget.toString() == '[object HTMLInputElement]'){\r\n          getCourse({page:1})\r\n        }\r\n      }  \r\n    }\r\n\r\n\r\n    const searchChange = (e)=> {\r\n      if(e.currentTarget.value == \"\"){\r\n        getCourse({items:10,page:1})\r\n      }\r\n    }\r\n\r\n    const onPressEnter = async(e) =>{ \r\n      if(e.currentTarget.value == \"\"){\r\n        message.error(\"请输入搜索内容\")\r\n        }else{\r\n          let res = await searchActive({key:e.currentTarget.value});\r\n          setActiveList({data:res,total:res.length})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n        <Search\r\n            placeholder=\"输入活动名称关键字\"\r\n            allowClear\r\n            enterButton=\"搜索\"\r\n            size=\"middle\"\r\n            style={{ width: 500 }}\r\n            onSearch={onSearch}\r\n            // onPressEnter={onPressEnter}\r\n            onChange={searchChange}\r\n        />\r\n            <Button type=\"primary\" onClick={add} style={{marginBottom:10,float:'right'}}>创建活动</Button>\r\n        </div>\r\n        <Table \r\n          dataSource={activeList.list} \r\n          columns={columns} \r\n          rowKey={(record=>record.id)} \r\n          size=\"small\"\r\n          pagination={{\r\n            total: activeList.total,\r\n            showQuickJumper:true,\r\n            showTotal:(total, range) => `共 ${total} 条记录`,\r\n            onChange:(page, pageSize)=>{\r\n                setPage(page)\r\n              getCourse({items:10,page:page})\r\n            }\r\n          }}\r\n          bordered \r\n          tableLayout\r\n        />\r\n\r\n        <Modal \r\n        footer={\r\n            operator != 'delete'?\r\n            null\r\n            :<><Button onClick={handleOk} type=\"primary\">确定</Button><Button onClick={handleCancel}>取消</Button></>\r\n        }\r\n         width={ operator != 'delete'?1000:500}\r\n          title={operator == \"delete\"?\"删除\":(operator == \"edit\"?\"详情\":\"新增\")} \r\n          visible={isModalVisible} \r\n          destroyOnClose={true}\r\n          onCancel={handleCancel}\r\n          onOk={handleOk}\r\n          \r\n        >\r\n            {operator != \"delete\"?\r\n            <AddActive operator={operator} data={data} getChildValue={childValue}>\r\n\r\n            </AddActive>\r\n            :<p>是否删除此项?<span style={{color:'red'}}>(删除后该活动下已报名的用户数据将会丢失)</span></p>}\r\n        </Modal>\r\n        <Modal \r\n            title=\"报名详情\"\r\n            visible={isRegModalVisible} \r\n            destroyOnClose={true}\r\n            footer={null}\r\n            onCancel={handleRegCancel}\r\n            width={1000}\r\n            >\r\n                <ActiveRegister data={data}/>\r\n            </Modal>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ActiveList\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\article\\ArticleList.jsx",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276"],"import { Button,Table,Modal,Form, Input,  DatePicker, message  } from 'antd';\r\nimport React ,{useState,useEffect} from 'react'\r\nimport {delArticle,searchArticle, getArticle} from '../../../../api/consoleApi'\r\nimport moment from 'moment'\r\nimport AddArticle from './AddArticle';\r\n\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nfunction ActiveList() {\r\n    const [articleList, setArticleList] = useState({})\r\n    const [operator, setOperator] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState()\r\n    const [data, setData] = useState({})\r\n    const [page,setPage] = useState(1)\r\n    const [isRegModalVisible, setIsRegModalVisible] = useState(false)\r\n\r\n  const getArticleList = async(page) => {\r\n    let res = await getArticle(page)\r\n    setArticleList(res)\r\n  }\r\n\r\n    useEffect(() => {\r\n      getArticleList({page:1})\r\n    }, [])\r\n    \r\n\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        {\r\n          title: '文章标题',\r\n          dataIndex: 'title',\r\n        },\r\n        {\r\n          title: '文章分类',\r\n          dataIndex: 'typeId',\r\n          render:(text)=>{\r\n            return text == 0?'首页推荐':'分类'+text\r\n          }\r\n        },\r\n        {\r\n          title: '排序',\r\n          dataIndex: 'sort',\r\n        },\r\n        {\r\n            title: '操作',\r\n            align:'center',\r\n            render:(text, record, index)=>(\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                    <Button type=\"link\" onClick={()=>{\r\n                        setOperator('edit')\r\n                        setData(articleList.list[index])\r\n                        showModal()\r\n                    }}>详情</Button>\r\n                    <Button type=\"link\" danger  onClick={()=>{\r\n                        setOperator('delete')\r\n                        setData(articleList.list[index])\r\n                        showModal()\r\n                    }}>删除</Button>\r\n                </div>\r\n            )\r\n        },\r\n      ];\r\n\r\n\r\n    const childValue = (data)=>{\r\n        if(data){\r\n            message.success(\"操作成功\")\r\n            handleCancel()\r\n            getArticleList({page:page})\r\n        }\r\n        else{\r\n            message.success(\"操作失败\")\r\n            handleCancel()\r\n        }\r\n    }\r\n    \r\n    const showRegModal = () => {\r\n\r\n      setIsRegModalVisible(true);\r\n    };\r\n  const handleRegCancel = () => {\r\n\r\n    setIsRegModalVisible(false);\r\n    };\r\n\r\n    const showModal = () => {\r\n\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n    const handleOk =async () => {\r\n        let res = await delArticle(data.id);\r\n      if(res.code == 200){\r\n        message.success(\"删除成功\")\r\n        getArticleList({page:page})\r\n      }else{\r\n        message.error(\"删除失败\")\r\n      }\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    };\r\n\r\n    const add = ()=>{\r\n        setOperator(\"add\")\r\n        showModal()\r\n    }\r\n\r\n    const onSearch =async (value,ev)=>{\r\n      if(ev){\r\n        if(ev.currentTarget.toString() == '[object HTMLButtonElement]'){\r\n          // 点了搜索按钮\r\n          if(value == \"\"){\r\n            message.error(\"请输入搜索内容\")\r\n            }else{\r\n              let res = await searchArticle({key:value,page:1});\r\n              setArticleList(res)\r\n            }\r\n        }else if(ev.currentTarget.toString() == '[object HTMLInputElement]'){\r\n          getArticleList({page:1})\r\n        }\r\n      }  \r\n    }\r\n\r\n\r\n    const searchChange = (e)=> {\r\n      if(e.currentTarget.value == \"\"){\r\n        getArticleList({page:1})\r\n      }\r\n    }\r\n\r\n    const onPressEnter = async(e) =>{ \r\n      if(e.currentTarget.value == \"\"){\r\n        message.error(\"请输入搜索内容\")\r\n        }else{\r\n          let res = await searchArticle({key:e.currentTarget.value,page:1});\r\n        //   setActiveList({data:res,total:res.length})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n        <Search\r\n            placeholder=\"输入文章标题\"\r\n            allowClear\r\n            enterButton=\"搜索\"\r\n            size=\"middle\"\r\n            style={{ width: 500 }}\r\n            onSearch={onSearch}\r\n            // onPressEnter={onPressEnter}\r\n            onChange={searchChange}\r\n        />\r\n            <Button type=\"primary\" onClick={add} style={{marginBottom:10,float:'right'}}>写文章</Button>\r\n        </div>\r\n        <Table \r\n          dataSource={articleList.list} \r\n          columns={columns} \r\n          rowKey={(record=>record.id)} \r\n          size=\"small\"\r\n          pagination={{\r\n            total: articleList.total,\r\n            showQuickJumper:true,\r\n            showTotal:(total, range) => `共 ${total} 条记录`,\r\n            onChange:(page, pageSize)=>{\r\n                setPage(page)\r\n              getArticleList({page:page})\r\n            }\r\n          }}\r\n          bordered \r\n          tableLayout\r\n        />\r\n\r\n        <Modal \r\n        footer={\r\n            operator != 'delete'?\r\n            null\r\n            :<><Button onClick={handleOk} type=\"primary\">确定</Button><Button onClick={handleCancel}>取消</Button></>\r\n        }\r\n         width={ operator != 'delete'?1000:500}\r\n          title={operator == \"delete\"?\"删除\":(operator == \"edit\"?\"详情\":\"写文章\")} \r\n          visible={isModalVisible} \r\n          destroyOnClose={true}\r\n          onCancel={handleCancel}\r\n          onOk={handleOk}\r\n          \r\n        >\r\n         \r\n            {operator != \"delete\"?\r\n            <AddArticle operator={operator} data={data} getChildValue={childValue} />\r\n            :<p>是否删除此项?<span style={{color:'red'}}></span></p>}\r\n        </Modal>\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ActiveList\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\CourseList.jsx",["277","278","279","280","281","282","283","284","285","286"],"import { Button,Table,Modal,Form, Input,  DatePicker  } from 'antd';\r\nimport React ,{useState,useEffect} from 'react'\r\nimport {getCourseList} from '../../../../api/consoleApi'\r\nimport moment from 'moment'\r\nimport CourseTable from './CourseTable';\r\n\r\nfunction CourseList() {\r\n  const [state, setState] = useState()\r\n\r\n\r\n  const fn = (data) => {\r\n    setState({\r\n        parentText: data //把父组件中的parentText替换为子组件传递的值\r\n    },() =>{\r\n       console.log(state);//setState是异步操作，但是我们可以在它的回调函数里面进行操作\r\n    });\r\n\r\n}\r\n    return (\r\n      <>\r\n        <CourseTable></CourseTable>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CourseList\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\CourseRegister.jsx",["287"],"import { Button, Table } from 'antd';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { getCourseReg } from '../../../../api/consoleApi';\r\nimport moment from 'moment'\r\nimport { ConfigBaseURL } from '../../../../api/http';\r\n\r\n\r\n\r\nfunction CourseRegister(props) {\r\n    const [list, setList] = useState({})\r\n    const getData = async (items,page)=>{\r\n        let res = await getCourseReg({courseId:props.data.id,items,page})\r\n        setList(res)\r\n    }\r\n    useEffect(() => {\r\n        getData(10,1); \r\n       \r\n    }, [])\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        {\r\n          title: '报名用户',\r\n          dataIndex: 'userName',\r\n        },\r\n        {\r\n          title: '报名时间',\r\n          dataIndex: 'createTime',\r\n          render:(text, record, index) => (\r\n            moment(new Date(text)).format(\"YYYY-MM-DD\")\r\n          )\r\n        } \r\n      ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button><a href={ConfigBaseURL+'/console/getExcel?courseId='+props.data.id}>导出excel</a></Button>\r\n            <Table \r\n                // title={props}\r\n                columns={columns}\r\n                dataSource={list.data}\r\n                rowKey={(record=>record.id)} \r\n                size=\"small\"\r\n                pagination={{\r\n                    total: list.total,\r\n                    showQuickJumper:true,\r\n                    showTotal:(total, range) => `共 ${total} 条记录`,\r\n                    onChange:(page, pageSize)=>{\r\n                      getData({items:10,page:page})\r\n                    }\r\n                  }}\r\n                bordered\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseRegister\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\active\\AddActive.jsx",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import 'braft-editor/dist/index.css'\r\nimport React from 'react'\r\nimport BraftEditor from 'braft-editor'\r\nimport { ContentUtils } from 'braft-utils'\r\nimport { ImageUtils } from 'braft-finder'\r\nimport { PictureOutlined  } from '@ant-design/icons';\r\nimport { Button, Card, Upload, Form, Input, Checkbox ,DatePicker,message,Row,Col,Image} from 'antd'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\nimport {addActive,editActive} from '../../../../api/consoleApi'\r\nimport moment from 'moment'\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 4,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\nconst config = {\r\n  rules: [\r\n    {\r\n      type: 'object',\r\n      required: true,\r\n      message: 'Please select time!',\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n\r\n\r\nexport default class AddActive extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n\r\n    this.state = ({\r\n      editorState: BraftEditor.createEditorState(this.props.operator == 'edit'?this.props.data.content:null),\r\n      fileList:[],\r\n      filePath:\"\",\r\n    })\r\n\r\n}\r\n\r\n\r\n  formRef = React.createRef();\r\n\r\n  onFinish = async(values) => {\r\n\r\n\r\n    if(this.props.operator == 'add'){\r\n      let data = {\r\n        ...values,\r\n        content:this.state.editorState.toHTML(),\r\n        startTime:moment(values.startTime).unix()*1000,\r\n        cover:this.state.filePath\r\n      }\r\n      let res = await addActive(data);\r\n      if(res.code == 200){\r\n        message.success(\"添加成功\")\r\n        this.onReset();\r\n        this.setState({\r\n          filePath:\"\",\r\n          fileList:[],\r\n  \r\n        })\r\n        this.clearContent();\r\n        this.props.getChildValue(true)\r\n      }else{\r\n        this.props.getChildValue(false)\r\n      }\r\n    }else if(this.props.operator == 'edit'){\r\n\r\n      let data = {\r\n        ...values,\r\n        content:this.state.editorState.toHTML(),\r\n        startTime:moment(values.startTime).unix()*1000,\r\n        cover:this.state.filePath == \"\"?(this.props.data.cover.replace(ConfigBaseURL,\"\")):this.state.filePath\r\n      }\r\n      let res = await editActive(data);\r\n      if(res.code == 200){\r\n        this.props.getChildValue(true)\r\n      }else{\r\n        this.props.getChildValue(false)\r\n      }\r\n    }\r\n\r\n  \r\n  };\r\n\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (editorState) => {\r\n\r\n    this.setState({ editorState })\r\n  } \r\n\r\n  uploadHandler = ({ fileList: newFileList }) => {\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        this.setState({\r\n          editorState: ContentUtils.insertMedias(this.state.editorState, [{\r\n            type: 'IMAGE',\r\n            url: newFileList[0].response.showAddress\r\n          }])\r\n        })\r\n      }\r\n      else{\r\n        message.error('插入图片失败，请检查网络');\r\n      }\r\n    }\r\n  }\r\n\r\n// 清空编辑器内容\r\n clearContent = () => {\r\n    this.setState({\r\n      editorState: ContentUtils.clear(this.state.editorState)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  componentWillUnmount(){\r\n    this.onReset();\r\n    this.setState({\r\n      filePath:\"\",\r\n      fileList:[],\r\n\r\n    })\r\n    this.clearContent();\r\n  }\r\n\r\n\r\n  // 预览\r\n  preview = () => {\r\n\r\n    if (window.previewWindow) {\r\n      window.previewWindow.close()\r\n    }\r\n\r\n    window.previewWindow = window.open()\r\n    window.previewWindow.document.write(this.buildPreviewHtml())\r\n    window.previewWindow.document.close()\r\n\r\n  }\r\n\r\n\r\n  buildPreviewHtml () {\r\n\r\n    return `\r\n      <!Doctype html>\r\n      <html>\r\n        <head>\r\n          <title>预览</title>\r\n          <style>\r\n            html,body{\r\n              height: 100%;\r\n              margin: 0;\r\n              padding: 0;\r\n              overflow: auto;\r\n              background-color: #f1f2f3;\r\n            }\r\n            .container{\r\n              box-sizing: border-box;\r\n              width: 1000px;\r\n              max-width: 100%;\r\n              min-height: 100%;\r\n              margin: 0 auto;\r\n              padding: 30px 20px;\r\n              overflow: hidden;\r\n              background-color: #fff;\r\n              border-right: solid 1px #eee;\r\n              border-left: solid 1px #eee;\r\n            }\r\n            .container img,\r\n            .container audio,\r\n            .container video{\r\n              max-width: 100%;\r\n              height: auto;\r\n            }\r\n            .container p{\r\n              white-space: pre-wrap;\r\n              min-height: 1em;\r\n            }\r\n            .container pre{\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-radius: 5px;\r\n            }\r\n            .container blockquote{\r\n              margin: 0;\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-left: 3px solid #d1d1d1;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">${this.state.editorState.toHTML()}</div>\r\n        </body>\r\n      </html>\r\n    `\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  onChange2 = ({ fileList: newFileList }) => {\r\n    this.setState({fileList:newFileList})\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        this.setState({filePath:newFileList[0].response.storageAddress})\r\n        \r\n      }\r\n      else{\r\n        message.error('图片上传失败，请检查网络');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render () {\r\n    \r\n    const controls = [\r\n      'line-height',\r\n      'headings',\r\n      'clear',\r\n      'list-ol',\r\n      'list-ul',\r\n      'remove-styles',\r\n      'hr',\r\n      'text-align',\r\n      'bold', 'italic', 'underline', 'text-color', 'separator', 'fullscreen'\r\n    ]\r\n    const extendControls = [\r\n      {\r\n        key: 'custom-button',\r\n        type: \"button\",\r\n        text: '预览',\r\n        onClick: this.preview\r\n      },\r\n      {\r\n        key: 'antd-uploader',\r\n        type: 'component',\r\n        component: (\r\n          <Upload\r\n            accept=\"image/*\"\r\n            showUploadList={false}\r\n            // customRequest={this.uploadHandler}\r\n            action={ConfigBaseURL+\"/addActiveImage\"}\r\n            method=\"post\"\r\n            name=\"file\"\r\n            onChange={this.uploadHandler}\r\n          >\r\n            <Button type=\"button\" className=\"control-item button upload-button\" data-title=\"插入图片\">\r\n            <PictureOutlined />\r\n            </Button>\r\n          </Upload>\r\n        )\r\n      },\r\n      \r\n    ]\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n        ref={this.formRef}\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={this.onFinish}\r\n      onFinishFailed={this.onFinishFailed}\r\n    >\r\n\r\n    {\r\n      this.props.operator == 'edit'?(\r\n        <Form.Item\r\n            label=\"id\"\r\n            name=\"id\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.id:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '未设置id',\r\n              },\r\n            ]}\r\n          >\r\n            <Input disabled/>\r\n      </Form.Item>\r\n      ):''\r\n    }\r\n\r\n\r\n    {\r\n      this.props.operator == 'edit'?(\r\n        <Form.Item\r\n            label=\"排序\"\r\n            name=\"sort\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.sort:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '填写排序信息',\r\n              },\r\n            ]}\r\n          >\r\n            <Input/>\r\n      </Form.Item>\r\n      ):''\r\n    }\r\n      \r\n\r\n      <Form.Item\r\n        label=\"活动名称\"\r\n        name=\"name\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.name:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入活动名称',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n  \r\n\r\n\r\n      <Form.Item \r\n        label=\"最多报名人数\"\r\n        name=\"maxPeople\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.maxPeople:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入最大报名人数',\r\n          },\r\n        ]}\r\n      >\r\n        <Input type=\"number\"/>\r\n      </Form.Item>\r\n\r\n     \r\n      \r\n      <Form.Item label=\"活动封面图\">\r\n        <ImgCrop aspect={1920/1080}>\r\n              <Upload\r\n                action={ConfigBaseURL+'/addActiveImage'} \r\n                listType=\"picture-card\"\r\n                fileList={this.state.fileList} \r\n                onChange={this.onChange2}\r\n                name=\"file\"\r\n              >\r\n            {this.state.fileList.length < 1 && '+ 上传'}\r\n          </Upload>\r\n        </ImgCrop>\r\n      </Form.Item>\r\n\r\n        <Image \r\n          src={\r\n              this.props.operator == 'edit'?\r\n              (\r\n                this.state.filePath==\"\"?\r\n                this.props.data.cover:\r\n                (ConfigBaseURL + this.state.filePath)\r\n              )\r\n              :''\r\n            } \r\n            style={{maxWidth:300,marginLeft:160,marginBottom:20}}/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Form.Item name=\"startTime\" label=\"活动开始时间\" {...config} \r\n      initialValue={(moment(new Date(parseInt(this.props.data.startTime))))}\r\n      >\r\n        <DatePicker />\r\n      </Form.Item>\r\n\r\n\r\n        \r\n\r\n          <Form.Item \r\n          label=\"活动介绍\"\r\n             name=\"content\"\r\n             >\r\n\r\n              <div>\r\n              <BraftEditor\r\n                controls={controls}\r\n                style={{border:'1px solid #ccc'}}\r\n                extendControls={extendControls}\r\n                contentStyle={{height: 400}}\r\n                placeholder=\"请输入正文内容\"\r\n                onChange={this.handleChange}\r\n                value={this.state.editorState}\r\n              />\r\n             </div>\r\n             \r\n\r\n     \r\n          </Form.Item>\r\n\r\n\r\n          \r\n         \r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n\r\n    </Form>\r\n      \r\n    </>\r\n    )\r\n\r\n  }\r\n\r\n}","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\AddCourse.jsx",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325"],"import 'braft-editor/dist/index.css'\r\nimport React from 'react'\r\nimport BraftEditor from 'braft-editor'\r\nimport { ContentUtils } from 'braft-utils'\r\nimport { ImageUtils } from 'braft-finder'\r\nimport { PictureOutlined  } from '@ant-design/icons';\r\nimport { Button, Card, Upload, Form, Input, Checkbox ,DatePicker,message,Row,Col,Image} from 'antd'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\nimport {addCourse,editCourse} from '../../../../api/consoleApi'\r\nimport moment from 'moment'\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 4,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\nconst config = {\r\n  rules: [\r\n    {\r\n      type: 'object',\r\n      required: true,\r\n      message: 'Please select time!',\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n\r\n\r\nexport default class AddCourse extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = ({\r\n      editorState: BraftEditor.createEditorState(this.props.operator == 'edit'?this.props.data.content:null),\r\n      fileList:[],\r\n      filePath:\"\",\r\n    })\r\n\r\n}\r\n\r\n\r\n  formRef = React.createRef();\r\n\r\n  onFinish = async(values) => {\r\n\r\n\r\n    if(this.props.operator == 'add'){\r\n      let data = {\r\n        ...values,\r\n        content:this.state.editorState.toHTML(),\r\n        startTime:moment(values.startTime).unix()*1000,\r\n        cover:this.state.filePath\r\n      }\r\n      let res = await addCourse(data);\r\n      if(res.code == 200){\r\n        message.success(\"添加成功\")\r\n        this.onReset();\r\n        this.setState({\r\n          filePath:\"\",\r\n          fileList:[],\r\n  \r\n        })\r\n        this.clearContent();\r\n        this.props.getChildValue(true)\r\n      }else{\r\n        this.props.getChildValue(false)\r\n      }\r\n    }else if(this.props.operator == 'edit'){\r\n\r\n      let data = {\r\n        ...values,\r\n        content:this.state.editorState.toHTML(),\r\n        startTime:moment(values.startTime).unix()*1000,\r\n        cover:this.state.filePath == \"\"?(this.props.data.cover.replace(ConfigBaseURL,\"\")):this.state.filePath\r\n      }\r\n      let res = await editCourse(data);\r\n      if(res.code == 200){\r\n        this.props.getChildValue(true)\r\n      }else{\r\n        this.props.getChildValue(false)\r\n      }\r\n    }\r\n\r\n  \r\n  };\r\n\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (editorState) => {\r\n\r\n    this.setState({ editorState })\r\n  } \r\n\r\n  uploadHandler = ({ fileList: newFileList }) => {\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        this.setState({\r\n          editorState: ContentUtils.insertMedias(this.state.editorState, [{\r\n            type: 'IMAGE',\r\n            url: newFileList[0].response.showAddress\r\n          }])\r\n        })\r\n      }\r\n      else{\r\n        message.error('插入图片失败，请检查网络');\r\n      }\r\n    }\r\n  }\r\n\r\n// 清空编辑器内容\r\n clearContent = () => {\r\n    this.setState({\r\n      editorState: ContentUtils.clear(this.state.editorState)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  componentWillUnmount(){\r\n    this.onReset();\r\n    this.setState({\r\n      filePath:\"\",\r\n      fileList:[],\r\n\r\n    })\r\n    this.clearContent();\r\n  }\r\n\r\n\r\n  // 预览\r\n  preview = () => {\r\n\r\n    if (window.previewWindow) {\r\n      window.previewWindow.close()\r\n    }\r\n\r\n    window.previewWindow = window.open()\r\n    window.previewWindow.document.write(this.buildPreviewHtml())\r\n    window.previewWindow.document.close()\r\n\r\n  }\r\n\r\n\r\n  buildPreviewHtml () {\r\n\r\n    return `\r\n      <!Doctype html>\r\n      <html>\r\n        <head>\r\n          <title>预览</title>\r\n          <style>\r\n            html,body{\r\n              height: 100%;\r\n              margin: 0;\r\n              padding: 0;\r\n              overflow: auto;\r\n              background-color: #f1f2f3;\r\n            }\r\n            .container{\r\n              box-sizing: border-box;\r\n              width: 1000px;\r\n              max-width: 100%;\r\n              min-height: 100%;\r\n              margin: 0 auto;\r\n              padding: 30px 20px;\r\n              overflow: hidden;\r\n              background-color: #fff;\r\n              border-right: solid 1px #eee;\r\n              border-left: solid 1px #eee;\r\n            }\r\n            .container img,\r\n            .container audio,\r\n            .container video{\r\n              max-width: 100%;\r\n              height: auto;\r\n            }\r\n            .container p{\r\n              white-space: pre-wrap;\r\n              min-height: 1em;\r\n            }\r\n            .container pre{\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-radius: 5px;\r\n            }\r\n            .container blockquote{\r\n              margin: 0;\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-left: 3px solid #d1d1d1;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">${this.state.editorState.toHTML()}</div>\r\n        </body>\r\n      </html>\r\n    `\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  onChange2 = ({ fileList: newFileList }) => {\r\n    this.setState({fileList:newFileList})\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        this.setState({filePath:newFileList[0].response.storageAddress})\r\n        \r\n      }\r\n      else{\r\n        message.error('图片上传失败，请检查网络');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render () {\r\n    \r\n    const controls = [\r\n      'line-height',\r\n      'headings',\r\n      'clear',\r\n      'list-ol',\r\n      'list-ul',\r\n      'remove-styles',\r\n      'hr',\r\n      'text-align',\r\n      'bold', 'italic', 'underline', 'text-color', 'separator', 'fullscreen'\r\n    ]\r\n    const extendControls = [\r\n      {\r\n        key: 'custom-button',\r\n        type: \"button\",\r\n        text: '预览',\r\n        onClick: this.preview\r\n      },\r\n      {\r\n        key: 'antd-uploader',\r\n        type: 'component',\r\n        component: (\r\n          <Upload\r\n            accept=\"image/*\"\r\n            showUploadList={false}\r\n            // customRequest={this.uploadHandler}\r\n            action={ConfigBaseURL+\"/addCourseImage\"}\r\n            method=\"post\"\r\n            name=\"file\"\r\n            onChange={this.uploadHandler}\r\n          >\r\n            <Button type=\"button\" className=\"control-item button upload-button\" data-title=\"插入图片\">\r\n            <PictureOutlined />\r\n            </Button>\r\n          </Upload>\r\n        )\r\n      },\r\n      \r\n    ]\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n        ref={this.formRef}\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={this.onFinish}\r\n      onFinishFailed={this.onFinishFailed}\r\n    >\r\n\r\n    {\r\n      this.props.operator == 'edit'?(\r\n        <Form.Item\r\n            label=\"id\"\r\n            name=\"id\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.id:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '未设置id',\r\n              },\r\n            ]}\r\n          >\r\n            <Input disabled/>\r\n      </Form.Item>\r\n      ):''\r\n    }\r\n\r\n\r\n    {\r\n      this.props.operator == 'edit'?(\r\n        <Form.Item\r\n            label=\"排序\"\r\n            name=\"sort\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.sort:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '填写排序信息',\r\n              },\r\n            ]}\r\n          >\r\n            <Input/>\r\n      </Form.Item>\r\n      ):''\r\n    }\r\n      \r\n\r\n      <Form.Item\r\n        label=\"课程名称\"\r\n        name=\"name\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.name:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入课程名称',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n  \r\n\r\n\r\n      <Form.Item \r\n        label=\"最多报名人数\"\r\n        name=\"maxPeople\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.maxPeople:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入最大报名人数',\r\n          },\r\n        ]}\r\n      >\r\n        <Input type=\"number\"/>\r\n      </Form.Item>\r\n\r\n     \r\n      \r\n      <Form.Item label=\"课程封面图\">\r\n        <ImgCrop aspect={1920/1080}>\r\n              <Upload\r\n                action={ConfigBaseURL+'/addCourseImage'} \r\n                listType=\"picture-card\"\r\n                fileList={this.state.fileList} \r\n                onChange={this.onChange2}\r\n                name=\"file\"\r\n              >\r\n            {this.state.fileList.length < 1 && '+ 上传'}\r\n          </Upload>\r\n        </ImgCrop>\r\n      </Form.Item>\r\n\r\n        <Image \r\n          src={\r\n              this.props.operator == 'edit'?\r\n              (\r\n                this.state.filePath==\"\"?\r\n                ( this.props.data.cover):\r\n                (ConfigBaseURL + this.state.filePath)\r\n              )\r\n              :''\r\n            } \r\n            style={{maxWidth:300,marginLeft:160,marginBottom:20}}/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Form.Item name=\"startTime\" label=\"课程开始时间\" {...config} \r\n      initialValue={(moment(new Date(parseInt(this.props.data.startTime))))}\r\n      >\r\n        <DatePicker />\r\n      </Form.Item>\r\n\r\n\r\n        \r\n\r\n          <Form.Item \r\n          label=\"课程介绍\"\r\n             name=\"content\"\r\n             >\r\n\r\n              <div>\r\n              <BraftEditor\r\n                controls={controls}\r\n                style={{border:'1px solid #ccc'}}\r\n                extendControls={extendControls}\r\n                contentStyle={{height: 400}}\r\n                placeholder=\"请输入正文内容\"\r\n                onChange={this.handleChange}\r\n                value={this.state.editorState}\r\n              />\r\n             </div>\r\n             \r\n\r\n     \r\n          </Form.Item>\r\n\r\n\r\n          \r\n         \r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n\r\n    </Form>\r\n      \r\n    </>\r\n    )\r\n\r\n  }\r\n\r\n}","F:\\ink-room-react-management\\src\\pages\\admin\\console\\artist\\ArtistShow.jsx",["326","327","328","329","330","331"],"import { Table ,Button, Input,Modal,message} from 'antd'\r\nimport React, { useEffect,useState } from 'react'\r\nimport { getArticleType ,deleteArtist,searchArtist} from '../../../../api/consoleApi'\r\nimport EditArticleType  from './EditArticleType'\r\n\r\nfunction ArtistShow() {\r\n    const [list, setList] = useState([])\r\n    const [operator, setOperator] = useState('')\r\n    const [data, setData] = useState({})\r\n    const [delId, setDelId] = useState();\r\n\r\n    const {Search} = Input;\r\n\r\n\r\n    const getData = async()=>{\r\n        let res = await getArticleType();\r\n       setList(res)\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isDelModalVisible, setIsDelModalVisible] = useState(false);\r\n    \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n\r\n  const showDelModal = () => {\r\n    setIsDelModalVisible(true);\r\n  };\r\n\r\n  const handleDelOk = async() => {\r\n    let res = await deleteArtist({id:delId});\r\n    if(res.code == 200){\r\n      message.success(\"删除成功\");\r\n      getData();\r\n    }else{\r\n      message.error(\"删除失败\");\r\n    }\r\n    setIsDelModalVisible(false);\r\n  };\r\n\r\n  const handleDelCancel = () => {\r\n    setIsDelModalVisible(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  const childValue = (data)=>{\r\n    if(data){\r\n        message.success(\"操作成功\")\r\n        handleCancel()\r\n        getData()\r\n    }\r\n    else{\r\n        message.success(\"操作失败\")\r\n        handleCancel()\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const onSearch =async (value,ev)=>{\r\n    if(ev){\r\n      if(ev.currentTarget.toString() == '[object HTMLButtonElement]'){\r\n        // 点了搜索按钮\r\n        if(value == \"\"){\r\n          message.error(\"请输入搜索内容\")\r\n          }else{\r\n            let res = await searchArtist({key:value});\r\n            setList(res)\r\n          }\r\n      }else if(ev.currentTarget.toString() == '[object HTMLInputElement]'){\r\n        getData()\r\n      }\r\n    }  \r\n  }\r\n\r\n\r\n  const searchChange = (e)=> {\r\n    if(e.currentTarget.value == \"\"){\r\n      getData()\r\n    }\r\n  }\r\n\r\n  const onPressEnter = async(e) =>{ \r\n    if(e.currentTarget.value == \"\"){\r\n      message.error(\"请输入搜索内容\")\r\n      }else{\r\n        let res = await searchArtist({key:e.currentTarget.value});\r\n        setList(res)\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        {\r\n          title: '用户id',\r\n          dataIndex: 'userId',\r\n        },\r\n        {\r\n          title: '艺术家',\r\n          dataIndex: 'username',\r\n        },\r\n        {\r\n          title: '排序',\r\n          dataIndex: 'sort',\r\n        },\r\n        {\r\n          title: '作品数量',\r\n          dataIndex: 'works',\r\n       \r\n        } ,\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'operator',\r\n            render:(text, record, index)=>(\r\n                <>\r\n                <Button type=\"link\" onClick={()=>{\r\n                  setOperator(\"edit\")\r\n                  setData(list[index])\r\n                  showModal()\r\n                }}>详情</Button>\r\n                <Button type=\"link\" danger onClick={()=>{\r\n                  setDelId(list[index].id)\r\n                  showDelModal()\r\n\r\n                }}>删除</Button>\r\n                </>\r\n            )\r\n          } \r\n      ];\r\n\r\n    return (\r\n        <div>\r\n           <div style={{display:'flex',marginBottom:10}}>\r\n           <Search\r\n            placeholder=\"输入艺术家名称\"\r\n            allowClear\r\n            enterButton=\"搜索\"\r\n            size=\"middle\"\r\n            style={{ width: 500 }}\r\n            onSearch={onSearch}\r\n            onPressEnter={onPressEnter}\r\n            onChange={searchChange}\r\n        />\r\n            <Button type='primary' style={{marginLeft:'auto'}} onClick={()=>{\r\n              setOperator(\"add\")\r\n              showModal()\r\n            }}>新增项目</Button>\r\n           </div>\r\n            <Table \r\n                size=\"small\"\r\n                dataSource={list}\r\n                columns={columns}\r\n                bordered\r\n                rowKey={(record=>record.id)} \r\n            ></Table>\r\n            <Modal \r\n              title=\"删除\"\r\n              destroyOnClose={true}\r\n              visible={isDelModalVisible}\r\n              onOk={handleDelOk} \r\n              onCancel={handleDelCancel}\r\n            >\r\n              是否删除此项？\r\n            </Modal>\r\n            <Modal\r\n            bodyStyle={{height:500,overflowY:'scroll'}}\r\n            footer={null}\r\n                title=\"详情\"\r\n                destroyOnClose={true}\r\n                 visible={isModalVisible}\r\n                  onOk={handleOk} \r\n                  onCancel={handleCancel}>\r\n              <EditArticleType operator={operator} data={data} getChildValue={childValue}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistShow\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\examine\\ArticleExamine.jsx",["332","333","334","335"],"F:\\ink-room-react-management\\src\\pages\\admin\\console\\display\\Display.jsx",["336","337","338","339","340","341","342","343","344","345"],"import { Card ,Statistic , Row, Col} from 'antd';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\nimport React ,{useState,useEffect} from 'react'\r\nimport {getDeals,getTurnover,getUserNumber} from '../../../../api/systemApi'\r\nimport { LineChart ,Chart,Line,Point,Tooltip} from 'bizcharts';\r\nfunction Display() {\r\n  const [deals, setdDeals] = useState();\r\n  const [turnover, setTurnover] = useState();\r\n  const [userNumber, setUserNumber] = useState();\r\n  const getData = async ()=>{\r\n      setTurnover(await getTurnover());\r\n      setdDeals(await getDeals());\r\n      setUserNumber(await getUserNumber());\r\n  }\r\n  useEffect(async ()=>{\r\n    getData()\r\n  },[])\r\n    return (\r\n      <>\r\n<div style={{display:'flex',flexFlow:'column'}}>\r\n       \r\n  <div style={{flex:1}}>\r\n      <LineChart\r\n        data={turnover?turnover.reverse():[]}\r\n        title={{\r\n          visible: true,\r\n          text: <span style={{fontSize:25,marginBottom:50,display:'inline-block'}}>近6个月销售额</span>,\r\n        }}\r\n        description={{\r\n          visible: true,\r\n          text: '单位：(元)',\r\n        }}\r\n        xField='month'\r\n        yField='price'\r\n        interactions={[]}\r\n      />\r\n  </div>\r\n  <div style={{flex:1,display:'flex',marginTop:50}}>\r\n    <Card size=\"small\" title=\"用户数量\" style={{ width: '50%' }}>\r\n        <div style={{display:'flex'}}>\r\n            <span style={{fontSize:20}}>\r\n            注册用户数：{userNumber&&userNumber[1].number}<br/>\r\n            本月新增用户数：{userNumber&&userNumber[0].number}\r\n            </span>\r\n        </div>\r\n      \r\n    </Card>\r\n    <Card size=\"small\" title=\"本月交易笔数\"  style={{ width: '50%' }}>\r\n            <span style={{fontSize:50}}>{deals&&deals[0].number}</span>\r\n    </Card>\r\n  </div>\r\n</div>\r\n\r\n{/* <Chart\r\n    appendPadding={[10, 0, 0, 10]}\r\n    autoFit\r\n    height={300}\r\n    data={turnover}\r\n    scale={{ value: { min: 0, alias: '近6个月销售额', type: 'linear-strict' }, year: { range: [0, 1] } }}\r\n>\r\n\r\n    <Line position=\"month*price\" />\r\n    <Point position=\"month*price\" />\r\n    <Tooltip showCrosshairs />\r\n</Chart> */}\r\n\r\n\r\n\r\n\r\n         {/* <Card title=\"用户数量\" extra={<a href=\"#\">More</a>} style={{ width: 300 }}>\r\n            <p>Card content</p>\r\n            <p>Card content</p>\r\n            <p>Card content</p>\r\n        </Card> */}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\examine\\PhotoExamine.jsx",["346","347","348"],"import React ,{useState,useEffect}from 'react'\r\nimport { Button,Table ,Modal, message,Image } from 'antd';\r\nimport {getIsShenHePhoto,isPhotoPass} from '../../../../api/consoleApi'\r\nimport {timeFormat} from '../../../../utils/timeFormat'\r\nimport './main.css'\r\nimport { ConfigBaseURL } from '../../../../api/http';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n  \r\nfunction PhotoExamine() {\r\n    const [photoList, setPhotoList] = useState([])\r\n    const [showModel, setShowModel] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const columns = [\r\n        { \r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        { \r\n            title: '名称',\r\n            dataIndex: 'name',\r\n          },\r\n        {\r\n          title: '图片',\r\n          dataIndex: 'path',\r\n          render:(text)=> <Image style={{maxWidth:200}} src={ConfigBaseURL + text}/>\r\n        },\r\n        {\r\n          title: '提交时间',\r\n          dataIndex: 'time',\r\n          render:(text)=>timeFormat(text)\r\n        },\r\n        \r\n        {\r\n            title: '操作',\r\n            align:'center',\r\n            render:(text, record, index)=>(\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                    <Button type=\"link\" onClick={()=>{\r\n                        setData(photoList.list[index]);\r\n                        setShowModel(true)\r\n                    }}>通过</Button>\r\n                    <Button type=\"link\" danger onClick={()=>{\r\n                        setData(photoList.list[index]);\r\n                        setShowModel(true)\r\n                    }}>不通过</Button>\r\n                </div>\r\n            )\r\n        },\r\n      ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n      const getPhotoList = async(start,pageSize) => {\r\n        let res = await getIsShenHePhoto(start,pageSize)\r\n\r\n        setPhotoList(res)\r\n      }\r\n\r\n    \r\n        useEffect(() => {\r\n            getPhotoList({start:10,pageSize:1})\r\n        }, [])\r\n        \r\n        const handleOk =async () => {\r\n            console.log(data);\r\n          // 网络请求\r\n          let res = await isPhotoPass({\r\n            isPass:1,\r\n            id:data.id,\r\n            photoListId:data.photoListId,\r\n            userId:data.userId,\r\n            path:data.path\r\n          })\r\n          \r\n          console.log();\r\n          if(res.code == 200){\r\n            message.success(\"操作成功\")\r\n\r\n          }else{\r\n            message.error(\"操作失败，请检查网络情况\")\r\n          }\r\n          getPhotoList({start:10,pageSize:1})\r\n          setShowModel(false);\r\n        };\r\n    \r\n        const handleCancel = () => {\r\n        setShowModel(false);\r\n        };\r\n\r\n    return (\r\n        <div>\r\n             <Table \r\n            dataSource={photoList.list} \r\n            columns={columns} \r\n            rowKey={(record=>record.id)} \r\n            size=\"small\"\r\n            // pagination={{\r\n            //     // total: articleList.total,\r\n            //     showQuickJumper:true,\r\n            //     showTotal:(total, range) => `共 ${total} 条记录`,\r\n            //     onChange:(page, pageSize)=>{\r\n            //     //     setPage(page)\r\n            //     // getArticleList({items:10,page:page})\r\n            //     }\r\n            // }}\r\n            bordered \r\n            tableLayout\r\n        />\r\n          <Modal \r\n        footer={\r\n           <>\r\n            <Button onClick={handleOk} type=\"primary\">确定</Button>\r\n            <Button type='primary' danger onClick={handleCancel}>取消</Button>\r\n           </>\r\n        }\r\n         width={500}\r\n          title={'审核'} \r\n          visible={showModel} \r\n          destroyOnClose={true}\r\n          onCancel={handleCancel}\r\n          onOk={handleOk}\r\n          \r\n        >\r\n         \r\n            <p>确认进行此操作？</p>\r\n         \r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhotoExamine\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\shop\\order\\OrderList.jsx",["349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React ,{useEffect,useState}from 'react'\r\nimport { Button,Table,Modal,Select, Input,  DatePicker, message ,Popconfirm,Image } from 'antd';\r\nimport { delShop, editStatus, getOrderList, getShop, searchOrder, searchShop ,searchStatus} from '../../../../api/shopApi'\r\nimport moment from 'moment'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\nfunction OrderList() {\r\n\r\n    // const { Search } = Input;\r\n\r\n    const layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n    };\r\n    const tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n    };\r\n\r\n\r\n\r\n    const [shopList, setShopList] = useState({});\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [operator, setOperator] = useState('');\r\n    const [data, setData] = useState({});\r\n\r\n\r\n\r\n    const confirm =async (id)=> {\r\n      let res = await delShop({id})\r\n      if(res.code == 200){\r\n        message.success('删除成功');\r\n        getData({page:1})\r\n      }else{\r\n\r\n        message.success('删除失败，请稍后再试');\r\n      }\r\n    }\r\n    \r\n    const cancel = (e)=> {\r\n\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n\r\n\r\n    const getData = async(page) => {\r\n        let res = await getOrderList(page)\r\n  \r\n        setShopList(res)\r\n      }\r\n    \r\n    useEffect(() => {\r\n        getData({page:1})\r\n    }, [])\r\n\r\n\r\n    const columns = [\r\n      {\r\n        title: '订单编号',\r\n        dataIndex: 'id',\r\n        align:'center',\r\n        render:(text)=><span style={{fontWeight:700}}>{text}</span>\r\n      },\r\n      {\r\n        title: '商品图片',\r\n        align:'center',\r\n        render:(text, record, index)=>(\r\n            <div style={{display:'flex',justifyContent:'center',padding:'15px 0'}}>\r\n\r\n               <Image src={record.coverPath} width={100} style={{borderRadius:'15px'}}></Image>\r\n            </div>\r\n        )\r\n    },\r\n \r\n        {\r\n          title: '商品名称',\r\n          dataIndex: 'shopName',\r\n          align:'center'\r\n        },\r\n        {\r\n          title: '价格',\r\n          dataIndex: 'price',\r\n          align:'center'\r\n        },\r\n\r\n        {\r\n          title: '发货状态',\r\n          dataIndex: 'status',\r\n          render:(text, record, index) => (\r\n            text=='0'?'待发货':(text=='1'?\"已发货\":'已签收')\r\n          ),\r\n          align:'center'\r\n      },\r\n        \r\n          {\r\n            title: '创建时间',\r\n            dataIndex: 'createTime',\r\n            render:(text, record, index) => (\r\n              moment(new Date(text)).format(\"YYYY-MM-DD HH:mm:ss\")\r\n            ),\r\n            align:'center'\r\n        },\r\n      \r\n        {\r\n            title: '订单详情',\r\n            align:'center',\r\n            render:(text, record, index)=>(\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                   \r\n                    <Button type=\"link\" onClick={()=>{\r\n                        showModal()\r\n                        setOperator('edit')\r\n                        setData(record)\r\n                    }}>详情</Button>\r\n                </div>\r\n            )\r\n        },\r\n        \r\n      ];\r\n\r\n      const onSearch =async (value,ev)=>{\r\n        if(ev){\r\n          if(ev.currentTarget.toString() == '[object HTMLButtonElement]'){\r\n            // 点了搜索按钮\r\n            if(value == \"\"){\r\n              message.error(\"请输入搜索内容\")\r\n              }else{\r\n                let res = await searchOrder({orderId:value,page:1});\r\n                setShopList(res)\r\n              }\r\n          }else if(ev.currentTarget.toString() == '[object HTMLInputElement]'){\r\n            getData({page:1})\r\n          }\r\n        }  \r\n      }\r\n      \r\n      \r\n      const searchChange = (e)=> {\r\n        if(e.currentTarget.value == \"\"){\r\n          getData({page:1})\r\n        }\r\n      }\r\n      \r\n      const onPressEnter = async(e) =>{ \r\n        if(e.currentTarget.value == \"\"){\r\n          message.error(\"请输入搜索内容\")\r\n          }else{\r\n            let res = await searchShop({key:e.currentTarget.value});\r\n            setShopList({data:res,total:res.length})\r\n          }\r\n      }\r\n\r\n      /**\r\n       * 通过发货状态筛选\r\n       */\r\n      const tabStatus = async(e)=>{\r\n        if(e){\r\n          let res = await searchStatus({status:e,page:1})\r\n          setShopList(res)\r\n        }else{\r\n          getData({page:1})\r\n        }\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={{display:'flex',marginBottom:20,alignItems:'center'}}>\r\n          订单号搜索：\r\n        <Input.Search\r\n          placeholder=\"请输入订单编号\" \r\n          style={{width:300}}\r\n          onSearch={onSearch}\r\n          onPressEnter={onPressEnter}\r\n          onChange={searchChange}\r\n          allowClear\r\n        />\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        订单状态搜索：\r\n        <Select placeholder=\"请选择订单状态\"  onChange={tabStatus} allowClear style={{width:300,marginRight:100}}>\r\n            <Select.Option value=\"0\">未发货</Select.Option>\r\n            <Select.Option value=\"1\">已发货</Select.Option>\r\n            <Select.Option value=\"2\">已签收</Select.Option>\r\n        </Select>\r\n        </div>\r\n        \r\n        <Table \r\n          \r\n          dataSource={shopList.list} \r\n          columns={columns} \r\n          rowKey={(record=>record.id)} \r\n          size=\"small\"\r\n          pagination={{\r\n            total: shopList.total,\r\n            showQuickJumper:true,\r\n            showTotal:(total, range) => `共 ${total} 条记录`,\r\n            onChange:(page, pageSize)=>{\r\n              getData({page:page})\r\n            }\r\n          }}\r\n          bordered \r\n          tableLayout\r\n        />\r\n       <Modal \r\n            title={\"订单：\"+data.id}\r\n            destroyOnClose={true} \r\n            footer={null}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            visible={isModalVisible}\r\n            width={600}\r\n            >\r\n              <div style={{ display:'flex'}}>\r\n                <div style={{marginRight:50,display:'flex',alignItems:'center'}}>\r\n                  <Image src={data.coverPath} width={150} style={{borderRadius:'15px'}}></Image>\r\n                </div>\r\n                <div>\r\n                  <p><span style={{display:'inline-block',width:100,fontWeight:700}}>商品名：</span>{data.shopName}</p>\r\n                  <p><span style={{display:'inline-block',width:100,fontWeight:700}}>收货人：</span>{data.name}</p>\r\n                  <p><span style={{display:'inline-block',width:100,fontWeight:700}}>收货手机号：</span>{data.phone}</p>\r\n                  <p><span style={{display:'inline-block',width:100,fontWeight:700}}>收货地址：</span>{data.address}</p>\r\n                  <p><span style={{display:'inline-block',width:100,fontWeight:700}}>发货状态：</span>{data.status=='0'?(<><span>未发货</span><Button type=\"link\" onClick={async ()=>{\r\n                    let res = await editStatus({id:data.id,status:1})\r\n                    if(res.code==\"200\"){\r\n                      message.success(\"操作成功\")\r\n                      handleOk()\r\n                      let old = {...shopList};\r\n                      old.list.forEach(item=>((item.id == data.id) && (item.status = 1)))\r\n                      setShopList({...old})\r\n                    }else{\r\n                      message.success(\"请检查您的网络\")\r\n                    }\r\n                  }}>立即发货</Button></>):(data.status=='1'?\"已发货\":'已签收')}</p>\r\n                  <p><span style={{display:'inline-block',width:100,fontWeight:700}}>订单备注：</span>{data.message}</p>\r\n                </div>\r\n              </div>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderList\r\n\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\type\\TypeSetting.jsx",["370","371","372","373"],"F:\\ink-room-react-management\\src\\pages\\admin\\shop\\shop\\ShopList.jsx",["374","375","376","377","378","379","380","381","382","383","384"],"import React ,{useEffect,useState}from 'react'\r\nimport { Button,Table,Modal,Form, Input,  DatePicker, message ,Popconfirm } from 'antd';\r\nimport { delShop, getShop, searchShop } from '../../../../api/shopApi'\r\nimport moment from 'moment'\r\nimport AddShop from './AddShop';\r\nfunction ShopList() {\r\n\r\n    // const { Search } = Input;\r\n\r\n    const layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n    };\r\n    const tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n    };\r\n\r\n\r\n\r\n    const [shopList, setShopList] = useState({});\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [operator, setOperator] = useState('');\r\n    const [data, setData] = useState({});\r\n\r\n\r\n\r\n    const confirm =async (id)=> {\r\n      let res = await delShop({id})\r\n      if(res.code == 200){\r\n        message.success('删除成功');\r\n        getData({page:1})\r\n      }else{\r\n\r\n        message.success('删除失败，请稍后再试');\r\n      }\r\n    }\r\n    \r\n    const cancel = (e)=> {\r\n\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n      };\r\n\r\n\r\n    const getData = async(items,page) => {\r\n        let res = await getShop(items,page)\r\n        setShopList(res)\r\n      }\r\n    \r\n    useEffect(() => {\r\n        getData({page:1})\r\n    }, [])\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        {\r\n          title: '商品名称',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: '价格',\r\n          dataIndex: 'price',\r\n        },\r\n        \r\n        {\r\n          title: '排序',\r\n          dataIndex: 'sort',\r\n        },\r\n        {\r\n          title: '艺术家',\r\n          dataIndex: 'artist',\r\n          render:(text) => text==''?'无':text\r\n        },\r\n        {\r\n            title: '所属类别',\r\n            dataIndex: 'typeName',\r\n          },\r\n          {\r\n            title: '上架时间',\r\n            dataIndex: 'createTime',\r\n            render:(text, record, index) => (\r\n              moment(new Date(text)).format(\"YYYY-MM-DD\")\r\n            )\r\n        },\r\n        {\r\n            title: '操作',\r\n            align:'center',\r\n            render:(text, record, index)=>(\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                   \r\n                    <Button type=\"link\" onClick={()=>{\r\n                        showModal()\r\n                        setOperator('edit')\r\n                        setData(record)\r\n                    }}>详情</Button>\r\n                     <Popconfirm\r\n                      title=\"是否删除此项？\"\r\n                      onConfirm={()=>{confirm(record.id)}}\r\n                      onCancel={cancel}\r\n                      okText=\"确认\"\r\n                      cancelText=\"取消\"\r\n                    >\r\n                      <Button type=\"link\" danger>删除</Button>\r\n\r\n                    </Popconfirm>\r\n                    <Button type=\"link\" onClick={()=>{\r\n                        \r\n                      }}>评价信息</Button>\r\n                    \r\n                </div>\r\n            )\r\n        },\r\n      ];\r\n\r\n      const onSearch =async (value,ev)=>{\r\n        if(ev){\r\n          if(ev.currentTarget.toString() == '[object HTMLButtonElement]'){\r\n            // 点了搜索按钮\r\n            if(value == \"\"){\r\n              message.error(\"请输入搜索内容\")\r\n              }else{\r\n                let res = await searchShop({key:value});\r\n                console.log(res);\r\n                setShopList({data:res,total:res.length})\r\n              }\r\n          }else if(ev.currentTarget.toString() == '[object HTMLInputElement]'){\r\n            getData({page:1})\r\n          }\r\n        }  \r\n      }\r\n      \r\n      \r\n      const searchChange = (e)=> {\r\n        if(e.currentTarget.value == \"\"){\r\n          getData({page:1})\r\n        }\r\n      }\r\n      \r\n      const onPressEnter = async(e) =>{ \r\n        if(e.currentTarget.value == \"\"){\r\n          message.error(\"请输入搜索内容\")\r\n          }else{\r\n            let res = await searchShop({key:e.currentTarget.value});\r\n            setShopList({data:res,total:res.length})\r\n          }\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={{display:'flex'}}>\r\n        <Input.Search\r\n          placeholder=\"请输入商品名\" \r\n          style={{width:300}}\r\n          onSearch={onSearch}\r\n          onPressEnter={onPressEnter}\r\n          onChange={searchChange}\r\n          allowClear\r\n        />\r\n        <Button \r\n        type='primary'\r\n          style={{marginBottom:20,marginLeft:'auto'}}\r\n          onClick={()=>{\r\n            setOperator(\"add\")\r\n            setData({})\r\n            showModal()\r\n        }}>新增商品</Button>\r\n        </div>\r\n        <Table \r\n          dataSource={shopList.list} \r\n          columns={columns} \r\n          rowKey={(record=>record.id)} \r\n          size=\"small\"\r\n          pagination={{\r\n            total: shopList.total,\r\n            showQuickJumper:true,\r\n            showTotal:(total, range) => `共 ${total} 条记录`,\r\n            onChange:(page, pageSize)=>{\r\n              getData({page:page})\r\n            }\r\n          }}\r\n          bordered \r\n          tableLayout\r\n        />\r\n       <Modal \r\n            title=\"商品详情\"\r\n            destroyOnClose={true} \r\n            footer={null}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            visible={isModalVisible}\r\n            width={1000}\r\n            >\r\n                <AddShop onChange={(res)=>{\r\n                  if(res){\r\n                    message.success('操作成功')\r\n                    getData({page:1})\r\n                    \r\n                  }else{\r\n                    message.error('操作失败，请稍后再试')\r\n                  }\r\n                  handleOk()\r\n                }} operator={operator} data={{...data,coverPath :(data.coverPath && JSON.parse(data.coverPath))}}/>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShopList\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\type\\Cover.jsx",["385","386"],"F:\\ink-room-react-management\\src\\pages\\admin\\shop\\shop\\AddShop.jsx",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"import 'braft-editor/dist/index.css'\r\nimport React from 'react'\r\nimport BraftEditor from 'braft-editor'\r\nimport { ContentUtils } from 'braft-utils'\r\nimport { ImageUtils } from 'braft-finder'\r\nimport { PictureOutlined ,DeleteOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Upload, Form, Input, Checkbox ,DatePicker,message,Row,Col,Image, Select} from 'antd'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\n\r\nimport moment from 'moment'\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { addShop, editShop } from '../../../../api/shopApi'\r\n\r\n\r\n\r\nconst layout = {\r\n  labelCol: { \r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 4,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\nconst config = {\r\n  rules: [\r\n    {\r\n      type: 'object',\r\n      required: true,\r\n      message: 'Please select time!',\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n\r\n\r\nexport default class AddShop extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = ({\r\n      editorState: BraftEditor.createEditorState(this.props.operator == 'edit'?this.props.data.msg:null),\r\n      shopShowFileList:[] ,//商品详情页展示的轮播图\r\n      propsImage:props.data.coverPath?[...props.data.coverPath] : [],\r\n      index:''//更换图片的index\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  formRef = React.createRef();\r\n\r\n  onFinish = async(values) => {\r\n    let coverPath = [...this.state.shopShowFileList.map(item => item.response.storageAddress),...this.state.propsImage]\r\n    if(coverPath.length <= 0){\r\n      message.error(\"至少上传一张图片！\");\r\n    }else{\r\n      if(this.props.operator == 'edit'){\r\n       let res = await editShop(\r\n         {...values,\r\n          type:parseInt(values.type),\r\n          msg:this.state.editorState.toHTML(),\r\n          coverPath:JSON.stringify(coverPath)\r\n        })\r\n       if(res.code == 200){\r\n         this.props.onChange(true)\r\n       }else{\r\n        this.props.onChange(false)\r\n       }\r\n      }\r\n\r\n      if(this.props.operator == 'add'){\r\n\r\n        let res = await addShop(\r\n          {...values,\r\n           type:parseInt(values.type),\r\n           msg:this.state.editorState.toHTML(),\r\n           coverPath:JSON.stringify(coverPath),\r\n           createTime:new Date().getTime()\r\n         })\r\n        if(res.code == 200){\r\n          this.props.onChange(true)\r\n        }else{\r\n         this.props.onChange(false)\r\n        }\r\n\r\n\r\n\r\n\r\n      }\r\n      \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n   \r\n\r\n  \r\n  };\r\n\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (editorState) => {\r\n\r\n    this.setState({ editorState })\r\n  } \r\n\r\n  uploadHandler = ({ fileList: newFileList }) => {\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        this.setState({\r\n          editorState: ContentUtils.insertMedias(this.state.editorState, [{\r\n            type: 'IMAGE',\r\n            url: newFileList[0].response.showAddress\r\n          }])\r\n        })\r\n      }\r\n      else{\r\n        message.error('插入图片失败，请检查网络');\r\n      }\r\n    }\r\n  }\r\n\r\n// 清空编辑器内容\r\n clearContent = () => {\r\n    this.setState({\r\n      editorState: ContentUtils.clear(this.state.editorState)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  componentWillUnmount(){\r\n    this.onReset();\r\n    this.setState({\r\n      filePath:\"\",\r\n      fileList:[],\r\n\r\n    })\r\n    this.clearContent();\r\n  }\r\n\r\n\r\n  // 预览\r\n  preview = () => {\r\n\r\n    if (window.previewWindow) {\r\n      window.previewWindow.close()\r\n    }\r\n\r\n    window.previewWindow = window.open()\r\n    window.previewWindow.document.write(this.buildPreviewHtml())\r\n    window.previewWindow.document.close()\r\n\r\n  }\r\n\r\n\r\n  buildPreviewHtml () {\r\n\r\n    return `\r\n      <!Doctype html>\r\n      <html>\r\n        <head>\r\n          <title>预览</title>\r\n          <style>\r\n            html,body{\r\n              height: 100%;\r\n              margin: 0;\r\n              padding: 0;\r\n              overflow: auto;\r\n              background-color: #f1f2f3;\r\n            }\r\n            .container{\r\n              box-sizing: border-box;\r\n              width: 1000px;\r\n              max-width: 100%;\r\n              min-height: 100%;\r\n              margin: 0 auto;\r\n              padding: 30px 20px;\r\n              overflow: hidden;\r\n              background-color: #fff;\r\n              border-right: solid 1px #eee;\r\n              border-left: solid 1px #eee;\r\n            }\r\n            .container img,\r\n            .container audio,\r\n            .container video{\r\n              max-width: 100%;\r\n              height: auto;\r\n            }\r\n            .container p{\r\n              white-space: pre-wrap;\r\n              min-height: 1em;\r\n            }\r\n            .container pre{\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-radius: 5px;\r\n            }\r\n            .container blockquote{\r\n              margin: 0;\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-left: 3px solid #d1d1d1;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">${this.state.editorState.toHTML()}</div>\r\n        </body>\r\n      </html>\r\n    `\r\n\r\n  }\r\n\r\n\r\n  onChange3 = ({ fileList: newFileList }) => {\r\n    this.setState({shopShowFileList:newFileList})\r\n    if(newFileList[0] && newFileList[0].response){\r\n      if(!newFileList[0].response.storageAddress)\r\n      {\r\n        message.error('图片上传失败，请检查网络');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  onChange = (file) => {\r\n    console.log(file);\r\n    if(file.file.response)\r\n    {\r\n      let arr = this.state.propsImage;\r\n      arr.splice(this.state.index,1,file.file.response.storageAddress);\r\n      this.setState({\r\n        propsImage:arr\r\n      })\r\n    }\r\n    // if(newFileList[0] && newFileList[0].response){\r\n    //   if(!newFileList[0].response.storageAddress)\r\n    //   {\r\n    //     message.error('图片上传失败，请检查网络');\r\n    //   }\r\n    // }\r\n  };\r\n\r\n\r\n\r\n\r\n  render () {\r\n    \r\n    const controls = [\r\n      'line-height',\r\n      'headings',\r\n      'clear',\r\n      'list-ol',\r\n      'list-ul',\r\n      'remove-styles',\r\n      'hr',\r\n      'text-align',\r\n      'bold', 'italic', 'underline', 'text-color', 'separator', 'fullscreen'\r\n    ]\r\n    const extendControls = [\r\n      {\r\n        key: 'custom-button',\r\n        type: \"button\",\r\n        text: '预览',\r\n        onClick: this.preview\r\n      },\r\n      {\r\n        key: 'antd-uploader',\r\n        type: 'component',\r\n        component: (\r\n          <Upload\r\n            accept=\"image/*\"\r\n            showUploadList={false}\r\n            // customRequest={this.uploadHandler}\r\n            action={ConfigBaseURL+\"/addActiveImage\"}\r\n            method=\"post\"\r\n            name=\"file\"\r\n            onChange={this.uploadHandler}\r\n          >\r\n            <Button type=\"button\" className=\"control-item button upload-button\" data-title=\"插入图片\">\r\n            <PictureOutlined />\r\n            </Button>\r\n          </Upload>\r\n        )\r\n      },\r\n      \r\n    ]\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n        ref={this.formRef}\r\n      {...layout}\r\n      name=\"basic\"\r\n      onFinish={this.onFinish}\r\n      onFinishFailed={this.onFinishFailed}\r\n    >\r\n\r\n    {\r\n      this.props.operator == 'edit'?(\r\n        <Form.Item\r\n            label=\"id\"\r\n            name=\"id\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.id:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '未设置id',\r\n              },\r\n            ]}\r\n          >\r\n            <Input disabled/>\r\n      </Form.Item>\r\n      ):''\r\n    }\r\n\r\n\r\n    \r\n      \r\n      <Form.Item\r\n        label=\"名称\"\r\n        name=\"name\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.name:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入商品名称',\r\n          },\r\n        ]}\r\n      >\r\n        <Input/>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        label=\"价格\"\r\n        name=\"price\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.price:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入价格',\r\n          },\r\n        ]}\r\n      >\r\n        <Input type=\"number\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item \r\n        label=\"商品类型\"\r\n        name=\"type\"\r\n        initialValue={this.props.operator == 'edit'?\"\"+this.props.data.type:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择商品类型',\r\n          },\r\n        ]}\r\n      >\r\n\r\n          <Select >\r\n              <Select.Option value=\"0\">无</Select.Option>\r\n              <Select.Option value=\"1\">国画</Select.Option>\r\n              <Select.Option value=\"2\">建盏</Select.Option>\r\n              <Select.Option value=\"3\">衍生</Select.Option>\r\n              <Select.Option value=\"4\">礼品</Select.Option>\r\n              <Select.Option value=\"5\">油画</Select.Option>\r\n              <Select.Option value=\"6\">瓷器</Select.Option>\r\n              <Select.Option value=\"7\">雕塑</Select.Option>\r\n              <Select.Option value=\"8\">其他</Select.Option>\r\n          </Select>\r\n\r\n      </Form.Item>\r\n\r\n      <Form.Item \r\n        label=\"艺术家\"\r\n        name=\"artist\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.artist:''}\r\n      >\r\n        <Input placeholder=\"没有可以不填\"/>\r\n      </Form.Item>\r\n\r\n\r\n\r\n      <Form.Item  \r\n            label=\"排序\"\r\n            name=\"sort\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.sort:1}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '填写排序信息',\r\n              },\r\n            ]}\r\n          >\r\n            <Input/>\r\n      </Form.Item>\r\n\r\n\r\n<Form.Item label=\"商品页详情轮播图\">\r\n  <ImgCrop aspect={600/600}>\r\n        <Upload\r\n          action={ConfigBaseURL+'/shopImage'} \r\n          listType=\"picture-card\"\r\n          fileList={this.state.shopShowFileList} \r\n          onChange={this.onChange3}\r\n          name=\"file\"\r\n        >\r\n      {this.state.shopShowFileList.length < (5-this.state.propsImage.length) && '+ 上传'}\r\n    </Upload>\r\n    \r\n  </ImgCrop>\r\n  {\"（最多五张,还可以上传\"+(5-this.state.propsImage.length - this.state.shopShowFileList.length) + \"张）\"}\r\n</Form.Item>\r\n\r\n{\r\n  this.props.operator == 'edit'?(\r\n    <div style={{position:'relative'}}>\r\n       \r\n      {\r\n       this.state.propsImage.map((item,index)=>(\r\n         <div style={{display:'flex',minHeight:100}} key={item}>\r\n           <Image src={ConfigBaseURL + item}\r\n            alt={\"展示图片\"+(index+1)}\r\n            title={\"展示图片\"+(index+1)}\r\n            width={300}\r\n            preview={false}\r\n            onMouseMove={()=>{\r\n              this.setState({opacity:1})\r\n            }}\r\n            onMouseLeave={()=>{\r\n              this.setState({opacity:0})\r\n            }}\r\n            style={{marginLeft:160,marginBottom:15}}\r\n          ></Image>\r\n          <div style={{marginLeft:200,display:'flex',flexFlow:'column',justifyContent:'center'}}>\r\n\r\n\r\n          <ImgCrop aspect={1920/1080}>\r\n              <Upload\r\n                action={ConfigBaseURL+'/addActiveImage'} \r\n                showUploadList={false}\r\n                onChange={this.onChange}\r\n                name=\"file\"\r\n              >\r\n           <Button type=\"primary\"  style={{marginBottom:20}} onClick={()=>{\r\n             this.setState({index})\r\n           }}>更换</Button>\r\n          </Upload>\r\n          \r\n        </ImgCrop>\r\n\r\n\r\n            \r\n            <Button type=\"primary\" danger onClick={()=>{\r\n              let arr = JSON.parse(JSON.stringify(this.state.propsImage))\r\n              arr.splice(index,1)\r\n              this.setState({\r\n                propsImage:arr\r\n              })\r\n            }}>删除</Button>\r\n          </div>\r\n         </div>\r\n         ))\r\n      }\r\n      \r\n    </div>\r\n  ):''\r\n}\r\n\r\n\r\n\r\n\r\n\r\n          <Form.Item \r\n          label=\"商品介绍\"\r\n             name=\"msg\"\r\n             >\r\n\r\n              <div>\r\n              <BraftEditor\r\n                controls={controls}\r\n                style={{border:'1px solid #ccc'}}\r\n                extendControls={extendControls}\r\n                contentStyle={{height: 400}}\r\n                placeholder=\"请输入正文内容\"\r\n                onChange={this.handleChange}\r\n                value={this.state.editorState}\r\n              />\r\n             </div>\r\n             \r\n\r\n     \r\n          </Form.Item>\r\n \r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n\r\n    </Form>\r\n      \r\n    </>\r\n    )\r\n\r\n  }\r\n\r\n}","F:\\ink-room-react-management\\src\\pages\\admin\\user\\userList\\UserList.jsx",["409","410","411","412","413","414","415","416","417","418"],"import React, { useEffect, useState } from 'react'\r\nimport { getUser,search,searchType } from '../../../../api/userApi';\r\nimport moment from 'moment'\r\nimport { Button,Table ,Modal, Input, Select,message} from 'antd';\r\nimport { Option } from 'antd/lib/mentions'\r\nimport UserEdit from './UserEdit';\r\nfunction UserList() {\r\n\r\nconst columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'openid',\r\n      dataIndex: 'openid',\r\n    },\r\n    {\r\n      title: '昵称',\r\n      dataIndex: 'name',\r\n    },\r\n    \r\n    {\r\n      title: 'vip等级',\r\n      dataIndex: 'vipLevel',\r\n      render:(text)=>{\r\n          switch (text) {\r\n              case '0':\r\n                  return '初级会员'\r\n                  break;\r\n            case '1':\r\n                return '高级会员'\r\n                break;\r\n            case '2':\r\n                return '专家会员'\r\n                break;\r\n              default:\r\n                  break;\r\n          }\r\n      }\r\n    },\r\n    {\r\n      title: '是否为艺术家',\r\n      dataIndex: 'isArtist',\r\n      render:(text, record, index)=>{\r\n          return text == 0?'是':'否';\r\n      }\r\n    },\r\n    {\r\n        title: '排序',\r\n        dataIndex: 'sort',\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'createTime',\r\n        render:(text, record, index) => (\r\n          moment(new Date(text)).format(\"YYYY-MM-DD\")\r\n        )\r\n    },\r\n    {\r\n        title: '操作',\r\n        align:'center',\r\n        render:(text, record, index)=>(\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n               \r\n                <Button type=\"link\" onClick={()=>{\r\n                    setData(record)\r\n                    showModal()\r\n\r\n                }}>详情</Button>\r\n                <Button type=\"link\" onClick={()=>{\r\n\r\n                }}>用户文章</Button>\r\n                <Button type=\"link\" onClick={()=>{\r\n\r\n                }}>用户相册</Button>\r\n            </div>\r\n        )\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\nconst [userList, setUserList] = useState({})\r\nconst [data, setData] = useState({})\r\nconst getData = async(page) => {\r\n    let res = await getUser(page)\r\n\r\n    setUserList(res)\r\n  }\r\n\r\n\r\nconst typeSearch =async (e)=>{\r\n  if(e){\r\n    let res = await searchType({key:e,page:1})\r\n\r\n    setUserList(res)\r\n  }else{\r\n    getData({page:1})\r\n  }\r\n}\r\n\r\n\r\n\r\nconst onSearch =async (value,ev)=>{\r\n  if(ev){\r\n    if(ev.currentTarget.toString() == '[object HTMLButtonElement]'){\r\n      // 点了搜索按钮\r\n      if(value == \"\"){\r\n        message.error(\"请输入搜索内容\") \r\n        }else{\r\n          let res = await search({key:value,page:1});\r\n          setUserList(res)\r\n        }\r\n    }else if(ev.currentTarget.toString() == '[object HTMLInputElement]'){\r\n      getData({page:1})\r\n    }\r\n  }  \r\n}\r\n\r\n\r\nconst searchChange = (e)=> {\r\n  if(e.currentTarget.value == \"\"){\r\n    getData({page:1})\r\n  }\r\n}\r\n\r\nconst onPressEnter = async(e) =>{ \r\n  if(e.currentTarget.value == \"\"){\r\n    message.error(\"请输入搜索内容\") \r\n    }else{\r\n      let res = await search({key:e.currentTarget.value,page:1});\r\n      console.log(res);\r\n      setUserList(res)\r\n    }\r\n}\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    getData({page:1})\r\n}, [])\r\n\r\n    return (\r\n        <>\r\n        <div style={{marginBottom:20}}>\r\n        按类别搜索：\r\n        <Select onChange={typeSearch} allowClear style={{width:300,marginRight:100}}>\r\n            <Select.Option value=\"0\">初级会员</Select.Option>\r\n            <Select.Option value=\"1\">高级会员</Select.Option>\r\n            <Select.Option value=\"2\">专家会员</Select.Option>\r\n        </Select>\r\n        按名称搜索：\r\n        <Input.Search \r\n          placeholder=\"请输入会员名\" \r\n          style={{width:300}}\r\n          onSearch={onSearch}\r\n          onPressEnter={onPressEnter}\r\n          onChange={searchChange}\r\n          allowClear\r\n        />\r\n        </div>\r\n        <Table \r\n        dataSource={userList.list} \r\n        columns={columns} \r\n        rowKey={(record=>record.id)} \r\n        size=\"small\"\r\n        pagination={{\r\n          total: userList.total,\r\n          showQuickJumper:true,\r\n          showTotal:(total, range) => `共 ${total} 条记录`,\r\n          onChange:(page, pageSize)=>{\r\n            getData({page:page})\r\n          }\r\n        }}\r\n        bordered \r\n        tableLayout\r\n      />\r\n\r\n      <Modal \r\n      title=\"用户详情\"\r\n      destroyOnClose={true} \r\n      footer={null}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      visible={isModalVisible}\r\n      width={1000}\r\n      >\r\n         <UserEdit data={data}  onChange={(res)=>{\r\n                  if(res){\r\n                    message.success('操作成功')\r\n                    getData({page:1})\r\n                    \r\n                  }else{\r\n                    message.error('操作失败，请稍后再试')\r\n                  }\r\n                  handleOk()\r\n                }}></UserEdit>\r\n      </Modal>\r\n</>\r\n\r\n    )\r\n}\r\n\r\nexport default UserList\r\n","F:\\ink-room-react-management\\src\\api\\shopApi.js",[],"F:\\ink-room-react-management\\src\\api\\consoleApi.js",[],"F:\\ink-room-react-management\\src\\api\\systemApi.js",["419","420"],"import {get,post,ConfigBaseURL} from './http'\r\n\r\n/**\r\n * 看板的相关api\r\n */\r\n\r\n// 获取用户列表\r\nexport async function getTurnover(){\r\n    let res = await get('/system/getTurnover')\r\n    console.log(res);\r\n    return res.data;\r\n}\r\nexport async function getUserNumber(){\r\n    let res = await get('/system/getUserNumber')\r\n    return res.data;\r\n}\r\nexport async function getDeals(){\r\n    let res = await get('/system/getDeals')\r\n    \r\n    return res.data;\r\n}\r\n\r\n\r\nexport async function login(args){\r\n    let res = await get('/system/login',args)\r\n    return res.data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","F:\\ink-room-react-management\\src\\api\\userApi.js",[],"F:\\ink-room-react-management\\src\\components\\User.jsx",[],"F:\\ink-room-react-management\\src\\components\\Shop.jsx",[],"F:\\ink-room-react-management\\src\\pages\\admin\\user\\userList\\UserEdit.jsx",["421","422","423"],"import {Form,Input,Select,Button} from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport React,{useEffect} from 'react'\r\nimport { Option } from 'antd/lib/mentions'\r\nimport { edit } from '../../../../api/userApi';\r\nconst layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n\r\n \r\n  \r\nconst UserEdit = (props) => {\r\n\r\n    const onFinish = async(e) => {\r\n        let res = await edit({...e})\r\n        if(res.code == 200){\r\n            props.onChange(true)\r\n        }else{\r\n            props.onChange(false)\r\n        }\r\n      }\r\n    \r\n    \r\n      const onFinishFailed = (e) => { \r\n          console.log(e);\r\n      }\r\n\r\n\r\nuseEffect(() => {\r\n    console.log(props);\r\n}, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                        label=\"id\"\r\n                        name=\"id\"\r\n                        initialValue={props.data.id}\r\n                    >\r\n                        <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                        label=\"昵称\"\r\n                        name=\"name\"\r\n                        initialValue={props.data.name}\r\n                    >\r\n                        <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                        label=\"排序\"\r\n                        name=\"sort\"\r\n                        initialValue={props.data.sort}\r\n                    >\r\n                        <Input type=\"number\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                        label=\"会员级别\"\r\n                        name=\"vipLevel\"\r\n                        initialValue={props.data.vipLevel}\r\n                    >\r\n                    <Select >\r\n                    <Select.Option value=\"0\">初级会员</Select.Option>\r\n                    <Select.Option value=\"1\">高级会员</Select.Option>\r\n                    <Select.Option value=\"2\">专家会员</Select.Option>\r\n                    \r\n                </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                        label=\"是否为艺术家\"\r\n                        name=\"isArtist\"\r\n                        initialValue={''+props.data.isArtist}\r\n                    >\r\n                    <Select >\r\n                        <Select.Option value=\"0\">是</Select.Option>\r\n                        <Select.Option value=\"1\">否</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                        label=\"个人介绍\"\r\n                        name=\"msg\"\r\n                        initialValue={props.data.msg}\r\n                    >\r\n                        <TextArea style={{minHeight:200}}/>\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEdit\r\n","F:\\ink-room-react-management\\src\\utils\\timeFormat.js",[],"F:\\ink-room-react-management\\src\\pages\\admin\\console\\artist\\EditArticleType.jsx",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438"],"import {Form,Input,Button,Upload,Image,message} from 'antd'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\nimport React, { useState } from 'react'\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { searchUsername , addArtist,editArtist} from '../../../../api/consoleApi';\r\n\r\nfunction EditArticleType(props) {\r\n   const [filePath1, setFilePath1] = useState(props.operator == 'edit'?props.data.image1:null)\r\n   const [filePath2, setFilePath2] = useState(props.operator == 'edit'?props.data.image2:null)\r\n   const [filePath3, setFilePath3] = useState(props.operator == 'edit'?props.data.image3:null)\r\n//    const [username,setUsername] = useState(\"\")\r\n\r\n   const [form] = Form.useForm();\r\n    const layout = {\r\n        labelCol: {\r\n          span: 6,\r\n        },\r\n        wrapperCol: {\r\n          span: 16,\r\n        },\r\n      };\r\n      const tailLayout = {\r\n        wrapperCol: {\r\n          offset: 17,\r\n          span: 16,\r\n        },\r\n      };\r\n\r\n\r\n      const onFinish = async(values) => {\r\n                if(props.operator == 'add'){\r\n                  let res = await addArtist({\r\n                    ...values,\r\n                    image1:filePath1 || '',\r\n                    image2:filePath2 || '',\r\n                    image3:filePath3 || ''\r\n                  })\r\n\r\n                  if(res.code == 200){\r\n                    props.getChildValue(true)\r\n                  }else{\r\n                    props.getChildValue(false)\r\n                  }\r\n                }else{\r\n                  let res = await editArtist({\r\n                    ...values,\r\n                    image1:filePath1,\r\n                    image2:filePath2,\r\n                    image3:filePath3\r\n                  })\r\n                  if(res.code == 200){\r\n                    props.getChildValue(true)\r\n                  }else{\r\n                    props.getChildValue(false)\r\n                  }\r\n                }\r\n                \r\n      };\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\nconst upload1 = ({ fileList: newFileList })=>{\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        setFilePath1(newFileList[0].response.storageAddress)\r\n      }\r\n      else{\r\n        message.error('图片上传失败，请检查网络');\r\n      }\r\n    }\r\n}\r\nconst upload2 = ({ fileList: newFileList })=>{\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        setFilePath2(newFileList[0].response.storageAddress)\r\n      }\r\n      else{\r\n        message.error('图片上传失败，请检查网络');\r\n      }\r\n    }\r\n}\r\nconst upload3 = ({ fileList: newFileList })=>{\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        setFilePath3(newFileList[0].response.storageAddress)\r\n      }\r\n      else{\r\n        message.error('图片上传失败，请检查网络');\r\n      }\r\n    }\r\n}\r\n\r\nconst onBlur = async(e)=>{\r\n    \r\n    // if(props.operator == 'add'){\r\n        if(e.target.value!=''){\r\n            let res = await searchUsername({id:e.target.value})\r\n        if(res.code == 200){\r\n            // setUsername(res.username)\r\n            form.setFieldsValue({username:res.username})\r\n        }else{\r\n            message.error(\"请填写正确的艺术家id！\")\r\n            form.setFieldsValue({username:''})\r\n        }\r\n        }\r\n    // }\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n            form={form}\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n    {\r\n        props.operator == 'edit' ? (\r\n            <Form.Item\r\n            label=\"id\"\r\n            name=\"id\"\r\n            initialValue={props.operator == 'edit'?props.data.id:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '未设置id',\r\n              },\r\n            ]}\r\n          >\r\n            <Input disabled/>\r\n      </Form.Item>\r\n        ):''\r\n    }\r\n\r\n<Form.Item\r\n        label=\"用户id\"\r\n        name=\"userId\"\r\n        initialValue={props.operator == 'edit'?props.data.userId:''}\r\n        \r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入用户id',\r\n          },\r\n        ]}\r\n      >\r\n        <Input type='number' onBlur={onBlur}/>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        label=\"艺术家名称\"\r\n        name=\"username\"\r\n        initialValue={props.operator == 'edit'?props.data.username:''}\r\n        \r\n        rules={[\r\n            {\r\n              required: true,\r\n              message: '请正确填写用户id',\r\n            },\r\n          ]}\r\n      >\r\n        <Input disabled/>\r\n      </Form.Item>\r\n\r\n    {\r\n        props.operator == 'edit' ? (\r\n            <Form.Item\r\n            label=\"排序\"\r\n            name=\"sort\"\r\n            initialValue={props.operator == 'edit'?props.data.sort:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '填写排序信息',\r\n              },\r\n            ]}\r\n          >\r\n            <Input/>\r\n      </Form.Item>\r\n        ):''\r\n    }\r\n\r\n\r\n    <Form.Item\r\n        label=\"作品数量\"\r\n        name=\"works\"\r\n        initialValue={props.operator == 'edit'?props.data.works:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入作品数量',\r\n          },\r\n        ]}\r\n      >\r\n        <Input type='number'/>\r\n      </Form.Item>\r\n\r\n\r\n\r\n     \r\n\r\n\r\n      <Form.Item label=\"展示图片一\">\r\n        <ImgCrop aspect={1920/1080}>\r\n              <Upload\r\n                action={ConfigBaseURL+'/artistImage'} \r\n                onChange={upload1}\r\n                name=\"file\"\r\n                showUploadList={false}\r\n              >\r\n            {\r\n                filePath1?\r\n                <Image src={ConfigBaseURL+ filePath1} width={100} preview={false}/>\r\n                :<Button type=\"primary\">上传</Button>\r\n            }\r\n          </Upload>\r\n        </ImgCrop>\r\n      </Form.Item>\r\n\r\n        \r\n\r\n\r\n      <Form.Item label=\"展示图片二\">\r\n        <ImgCrop aspect={1920/1080}>\r\n              <Upload\r\n                action={ConfigBaseURL+'/addActiveImage'} \r\n                onChange={upload2}\r\n                name=\"file\"\r\n                showUploadList={false}\r\n              >\r\n            {\r\n                filePath2?\r\n                <Image src={ConfigBaseURL+ filePath2} width={100} preview={false}/>\r\n                :<Button type=\"primary\">上传</Button>\r\n            }\r\n          </Upload>\r\n        </ImgCrop>\r\n      </Form.Item>\r\n      <Form.Item label=\"展示图片三\">\r\n        <ImgCrop aspect={1920/1080}>\r\n              <Upload\r\n                action={ConfigBaseURL+'/addActiveImage'} \r\n                onChange={upload3}\r\n                name=\"file\"\r\n                showUploadList={false}\r\n              >\r\n            {\r\n                filePath3?\r\n                <Image src={ConfigBaseURL+ filePath3} width={100} preview={false}/>\r\n                :<Button type=\"primary\">上传</Button>\r\n            }\r\n          </Upload>\r\n        </ImgCrop>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n            确认修改\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditArticleType\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\course\\CourseTable.jsx",["439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454"],"import { Button,Table,Modal,Form, Input,  DatePicker, message  } from 'antd';\r\nimport React ,{useState,useEffect} from 'react'\r\nimport {getCourseList,delCourse,searchCourse} from '../../../../api/consoleApi'\r\nimport moment from 'moment'\r\nimport AddCourse from './AddCourse';\r\nimport CourseRegister from './CourseRegister';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nfunction CourseTable() {\r\n    const [CourseList, setCourseList] = useState({})\r\n    const [operator, setOperator] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState()\r\n    const [isRegModalVisible, setIsRegModalVisible] = useState(false)\r\n    const [data, setData] = useState({})\r\n    const [page,setPage] = useState(1)\r\n\r\n  const getCourse = async(page) => {\r\n    let res = await getCourseList(page)\r\n    setCourseList(res) \r\n  }\r\n\r\n    useEffect(() => {\r\n      getCourse({page:1})\r\n    }, [])\r\n    \r\n\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          dataIndex: 'id',\r\n        },\r\n        {\r\n          title: '课程名称',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: '课程开始时间',\r\n          dataIndex: 'startTime',\r\n          render:(text, record, index) => (\r\n            moment(new Date(text)).format(\"YYYY-MM-DD\")\r\n          )\r\n        },\r\n        {\r\n          title: '人数限制',\r\n          dataIndex: 'maxPeople',\r\n        },\r\n        {\r\n          title: '排序',\r\n          dataIndex: 'sort',\r\n        },\r\n        {\r\n            title: '操作',\r\n            align:'center',\r\n            render:(text, record, index)=>(\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                     <Button type=\"link\" onClick={()=>{\r\n                        setData(CourseList.list[index])\r\n                        showRegModal()\r\n                    }}>报名详情</Button>\r\n                    <Button type=\"link\" onClick={()=>{\r\n                        setOperator('edit')\r\n                        setData(CourseList.list[index])\r\n                        showModal()\r\n                    }}>详情</Button>\r\n                    <Button type=\"link\" danger  onClick={()=>{\r\n                        setOperator('delete')\r\n                        setData(CourseList.list[index])\r\n                        showModal()\r\n                    }}>删除</Button>\r\n                </div>\r\n            )\r\n        },\r\n      ];\r\n\r\n\r\n    const childValue = (data)=>{\r\n        if(data){\r\n            message.success(\"操作成功\")\r\n            handleCancel()\r\n            getCourse({page:page})\r\n        }\r\n        else{\r\n            message.success(\"操作失败\")\r\n            handleCancel()\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    const showRegModal = () => {\r\n\r\n        setIsRegModalVisible(true);\r\n      };\r\n    const handleRegCancel = () => {\r\n\r\n      setIsRegModalVisible(false);\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n    const showModal = () => {\r\n\r\n        setIsModalVisible(true);\r\n      };\r\n    \r\n    const handleOk =async () => {\r\n        let res = await delCourse({id:data.id});\r\n      if(res.code == 200){\r\n        message.success(\"删除成功\")\r\n        getCourse({page:page})\r\n      }else{\r\n        message.error(\"删除失败\")\r\n      }\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    };\r\n\r\n    const add = ()=>{\r\n        setOperator(\"add\")\r\n        showModal()\r\n    }\r\n\r\n    const onSearch =async (value,ev)=>{\r\n      console.log(1);\r\n      if(ev){\r\n        if(ev.currentTarget.toString() == '[object HTMLButtonElement]'){\r\n          // 点了搜索按钮\r\n          if(value == \"\"){\r\n            message.error(\"请输入搜索内容\")\r\n            }else{\r\n              let res = await searchCourse({key:value,page:1});\r\n              setCourseList(res)\r\n            }\r\n        }else if(ev.currentTarget.toString() == '[object HTMLInputElement]'){\r\n          getCourse({page:1})\r\n        }\r\n      }  \r\n    }\r\n\r\n\r\n    const searchChange = (e)=> {\r\n      if(e.currentTarget.value == \"\"){\r\n        getCourse({page:1})\r\n      }\r\n    }\r\n\r\n    const onPressEnter = async(e) =>{ \r\n      if(e.currentTarget.value == \"\"){\r\n        message.error(\"请输入搜索内容\")\r\n        }else{\r\n          let res = await searchCourse({key:e.currentTarget.value,page:1});\r\n\r\n          setCourseList({data:res,total:res.length})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n        <Search\r\n            placeholder=\"输入课程名称关键字\"\r\n            allowClear\r\n            enterButton=\"搜索\"\r\n            size=\"middle\"\r\n            style={{ width: 500 }}\r\n            onSearch={onSearch}\r\n            // onPressEnter={onPressEnter}\r\n            onChange={searchChange}\r\n        />\r\n            <Button type=\"primary\" onClick={add} style={{marginBottom:10,float:'right'}}>新建课程</Button>\r\n        </div>\r\n        <Table \r\n          dataSource={CourseList.list} \r\n          columns={columns} \r\n          rowKey={(record=>record.id)} \r\n          size=\"small\"\r\n          pagination={{\r\n            total: CourseList.total,\r\n            showQuickJumper:true,\r\n            showTotal:(total, range) => `共 ${total} 条记录`,\r\n            onChange:(page, pageSize)=>{\r\n                setPage(page)\r\n              getCourse({items:10,page:page})\r\n            }\r\n          }}\r\n          bordered \r\n          tableLayout\r\n        />\r\n\r\n        <Modal \r\n        footer={\r\n            operator != 'delete'?\r\n            null\r\n            :<><Button onClick={handleOk} type=\"primary\">确定</Button><Button onClick={handleCancel}>取消</Button></>\r\n        }\r\n         width={ operator != 'delete'?1000:500}\r\n          title={operator == \"delete\"?\"删除\":(operator == \"edit\"?\"详情\":\"新增\")} \r\n          visible={isModalVisible} \r\n          destroyOnClose={true}\r\n          onCancel={handleCancel}\r\n          onOk={handleOk}\r\n          \r\n        >\r\n            {operator != \"delete\"?\r\n            <AddCourse operator={operator} data={data} getChildValue={childValue}>\r\n\r\n            </AddCourse>\r\n            :<p>是否删除此项?<span style={{color:'red'}}>(删除后该课程下已报名的用户数据将会丢失)</span></p>}\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n        <Modal \r\n          title=\"报名详情\"\r\n          visible={isRegModalVisible} \r\n          destroyOnClose={true}\r\n          footer={null}\r\n          onCancel={handleRegCancel}\r\n          width={1000}\r\n        >\r\n            <CourseRegister data={data}/>\r\n        </Modal>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CourseTable\r\n","F:\\ink-room-react-management\\src\\pages\\admin\\console\\article\\AddArticle.jsx",["455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475"],"import 'braft-editor/dist/index.css'\r\nimport React from 'react'\r\nimport BraftEditor from 'braft-editor'\r\nimport { ContentUtils } from 'braft-utils'\r\nimport { ImageUtils } from 'braft-finder'\r\nimport { PictureOutlined  } from '@ant-design/icons';\r\nimport { Button, Card, Upload, Form, Input, Checkbox ,DatePicker,message,Row,Col,Image,Radio} from 'antd'\r\nimport {ConfigBaseURL} from '../../../../api/http'\r\nimport {adminWriteArticle,editArticle} from '../../../../api/consoleApi'\r\nimport moment from 'moment'\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 4,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\nconst config = {\r\n  rules: [\r\n    {\r\n      type: 'object',\r\n      required: true,\r\n      message: 'Please select time!',\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n\r\n\r\nexport default class AddActive extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n\r\n    this.state = ({\r\n      editorState: BraftEditor.createEditorState(this.props.operator == 'edit'?this.props.data.content:null),\r\n      fileList:[],\r\n      filePath:\"\",\r\n    })\r\n\r\n}\r\n\r\n\r\n  formRef = React.createRef();\r\n\r\n  onFinish = async(values) => {\r\n\r\n\r\n    if(this.props.operator == 'add'){\r\n      let data = {\r\n        ...values,\r\n        content:this.state.editorState.toHTML(),\r\n        startTime:moment(values.startTime).unix()*1000,\r\n        coverPath:ConfigBaseURL+ this.state.filePath\r\n      }\r\n      let res = await adminWriteArticle(data);\r\n      console.log(res);\r\n      if(res.code == 200){\r\n        message.success(\"提交成功\")\r\n        this.onReset();\r\n        this.setState({\r\n          filePath:\"\",\r\n          fileList:[],\r\n  \r\n        })\r\n        this.clearContent();\r\n        this.props.getChildValue(true)\r\n      }else{\r\n        this.props.getChildValue(false)\r\n      }\r\n    }else if(this.props.operator == 'edit'){\r\n\r\n      let data = {\r\n        ...values,\r\n        content:this.state.editorState.toHTML(),\r\n        startTime:moment(values.startTime).unix()*1000,\r\n        coverPath:this.state.filePath == \"\"?(this.props.data.coverPath.replace(ConfigBaseURL,\"\")):this.state.filePath\r\n      }\r\n      let res = await editArticle(data);\r\n      if(res.code == 200){\r\n        this.props.getChildValue(true)\r\n      }else{\r\n        this.props.getChildValue(false)\r\n      }\r\n    }\r\n\r\n  \r\n  };\r\n\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (editorState) => {\r\n\r\n    this.setState({ editorState })\r\n  } \r\n\r\n  uploadHandler = ({ fileList: newFileList }) => {\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        this.setState({\r\n          editorState: ContentUtils.insertMedias(this.state.editorState, [{\r\n            type: 'IMAGE',\r\n            url: newFileList[0].response.showAddress\r\n          }])\r\n        })\r\n      }\r\n      else{\r\n        message.error('插入图片失败，请检查网络');\r\n      }\r\n    }\r\n  }\r\n\r\n// 清空编辑器内容\r\n clearContent = () => {\r\n    this.setState({\r\n      editorState: ContentUtils.clear(this.state.editorState)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  componentWillUnmount(){\r\n    this.onReset();\r\n    this.setState({\r\n      filePath:\"\",\r\n      fileList:[],\r\n\r\n    })\r\n    this.clearContent();\r\n  }\r\n\r\n\r\n  // 预览\r\n  preview = () => {\r\n\r\n    if (window.previewWindow) {\r\n      window.previewWindow.close()\r\n    }\r\n\r\n    window.previewWindow = window.open()\r\n    window.previewWindow.document.write(this.buildPreviewHtml())\r\n    window.previewWindow.document.close()\r\n\r\n  }\r\n\r\n\r\n  buildPreviewHtml () {\r\n\r\n    return `\r\n      <!Doctype html>\r\n      <html>\r\n        <head>\r\n          <title>预览</title>\r\n          <style>\r\n            html,body{\r\n              height: 100%;\r\n              margin: 0;\r\n              padding: 0;\r\n              overflow: auto;\r\n              background-color: #f1f2f3;\r\n            }\r\n            .container{\r\n              box-sizing: border-box;\r\n              width: 1000px;\r\n              max-width: 100%;\r\n              min-height: 100%;\r\n              margin: 0 auto;\r\n              padding: 30px 20px;\r\n              overflow: hidden;\r\n              background-color: #fff;\r\n              border-right: solid 1px #eee;\r\n              border-left: solid 1px #eee;\r\n            }\r\n            .container img,\r\n            .container audio,\r\n            .container video{\r\n              max-width: 100%;\r\n              height: auto;\r\n            }\r\n            .container p{\r\n              white-space: pre-wrap;\r\n              min-height: 1em;\r\n            }\r\n            .container pre{\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-radius: 5px;\r\n            }\r\n            .container blockquote{\r\n              margin: 0;\r\n              padding: 15px;\r\n              background-color: #f1f1f1;\r\n              border-left: 3px solid #d1d1d1;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">${this.state.editorState.toHTML()}</div>\r\n        </body>\r\n      </html>\r\n    `\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  onChange2 = ({ fileList: newFileList }) => {\r\n    this.setState({fileList:newFileList})\r\n    if(newFileList[0].response){\r\n      if(newFileList[0].response.storageAddress)\r\n      {\r\n        this.setState({filePath:newFileList[0].response.storageAddress})\r\n        \r\n      }\r\n      else{\r\n        message.error('图片上传失败，请检查网络');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render () {\r\n    \r\n    const controls = [\r\n      'line-height',\r\n      'headings',\r\n      'clear',\r\n      'list-ol',\r\n      'list-ul',\r\n      'remove-styles',\r\n      'hr',\r\n      'text-align',\r\n      'bold', 'italic', 'underline', 'text-color', 'separator', 'fullscreen'\r\n    ]\r\n    const extendControls = [\r\n      {\r\n        key: 'custom-button',\r\n        type: \"button\",\r\n        text: '预览',\r\n        onClick: this.preview\r\n      },\r\n      {\r\n        key: 'antd-uploader',\r\n        type: 'component',\r\n        component: (\r\n          <Upload\r\n            accept=\"image/*\"\r\n            showUploadList={false}\r\n            // customRequest={this.uploadHandler}\r\n            action={ConfigBaseURL+\"/addActiveImage\"}\r\n            method=\"post\"\r\n            name=\"file\"\r\n            onChange={this.uploadHandler}\r\n          >\r\n            <Button type=\"button\" className=\"control-item button upload-button\" data-title=\"插入图片\">\r\n            <PictureOutlined />\r\n            </Button>\r\n          </Upload>\r\n        )\r\n      },\r\n      \r\n    ]\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n        ref={this.formRef}\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={this.onFinish}\r\n      onFinishFailed={this.onFinishFailed}\r\n    >\r\n\r\n    {\r\n      this.props.operator == 'edit'?(\r\n        <Form.Item\r\n            label=\"id\"\r\n            name=\"id\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.id:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '未设置id',\r\n              },\r\n            ]}\r\n          >\r\n            <Input disabled/>\r\n      </Form.Item>\r\n      ):''\r\n    }\r\n\r\n\r\n    {\r\n      this.props.operator == 'edit'?(\r\n        <Form.Item\r\n            label=\"排序\"\r\n            name=\"sort\"\r\n            initialValue={this.props.operator == 'edit'?this.props.data.sort:''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '填写排序信息',\r\n              },\r\n            ]}\r\n          >\r\n            <Input/>\r\n      </Form.Item>\r\n      ):''\r\n    }\r\n      \r\n\r\n      <Form.Item\r\n        label=\"文章标题\"\r\n        name=\"title\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.title:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入文章标题',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>     \r\n\r\n\r\n      <Form.Item \r\n        name=\"typeId\"  \r\n        label=\"文章分类\"\r\n        initialValue={this.props.operator == 'edit'?this.props.data.typeId:''}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择文章分类',\r\n          },\r\n        ]}>\r\n        <Radio.Group>\r\n          <Radio value='0'>首页推荐</Radio>\r\n          <Radio value='1'>分类1</Radio>\r\n          <Radio value='2'>分类2</Radio>\r\n          <Radio value='3'>分类3</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n\r\n      \r\n      <Form.Item label=\"文章封面图\">\r\n        <ImgCrop aspect={1920/1080}>\r\n              <Upload\r\n                action={ConfigBaseURL+'/articleImage'} \r\n                listType=\"picture-card\"\r\n                fileList={this.state.fileList} \r\n                onChange={this.onChange2}\r\n                name=\"file\"\r\n              >\r\n            {this.state.fileList.length < 1 && '+ 上传'}\r\n          </Upload>\r\n        </ImgCrop>\r\n      </Form.Item>\r\n\r\n        <Image \r\n          src={\r\n              this.props.operator == 'edit'?\r\n              (\r\n                this.state.filePath==\"\"?\r\n                ConfigBaseURL+this.props.data.coverPath:\r\n                (ConfigBaseURL + this.state.filePath)\r\n              )\r\n              :''\r\n            } \r\n            style={{maxWidth:300,marginLeft:160,marginBottom:20}}/>\r\n\r\n\r\n          <Form.Item \r\n          label=\"文章内容\"\r\n             name=\"content\"\r\n             >\r\n\r\n              <div>\r\n              <BraftEditor\r\n                controls={controls}\r\n                style={{border:'1px solid #ccc'}}\r\n                extendControls={extendControls}\r\n                contentStyle={{height: 400}}\r\n                placeholder=\"请输入正文内容\"\r\n                onChange={this.handleChange}\r\n                value={this.state.editorState}\r\n              />\r\n             </div>\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n\r\n    </Form>\r\n      \r\n    </>\r\n    )\r\n\r\n  }\r\n\r\n}","F:\\ink-room-react-management\\src\\components\\Console.jsx",[],{"ruleId":"476","severity":1,"message":"477","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":13},{"ruleId":"480","replacedBy":"481"},{"ruleId":"482","replacedBy":"483"},{"ruleId":"480","replacedBy":"484"},{"ruleId":"482","replacedBy":"485"},{"ruleId":"486","severity":1,"message":"487","line":3,"column":51,"nodeType":"488","messageId":"489","endLine":3,"endColumn":53},{"ruleId":"476","severity":1,"message":"477","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":13},{"ruleId":"476","severity":1,"message":"490","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":22},{"ruleId":"476","severity":1,"message":"491","line":6,"column":8,"nodeType":"478","messageId":"479","endLine":6,"endColumn":17},{"ruleId":"476","severity":1,"message":"492","line":11,"column":8,"nodeType":"478","messageId":"479","endLine":11,"endColumn":22},{"ruleId":"476","severity":1,"message":"493","line":12,"column":8,"nodeType":"478","messageId":"479","endLine":12,"endColumn":17},{"ruleId":"476","severity":1,"message":"494","line":27,"column":8,"nodeType":"478","messageId":"479","endLine":27,"endColumn":15},{"ruleId":"486","severity":1,"message":"487","line":73,"column":20,"nodeType":"488","messageId":"489","endLine":73,"endColumn":22},{"ruleId":"486","severity":1,"message":"487","line":77,"column":25,"nodeType":"488","messageId":"489","endLine":77,"endColumn":27},{"ruleId":"486","severity":1,"message":"487","line":83,"column":19,"nodeType":"488","messageId":"489","endLine":83,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":87,"column":25,"nodeType":"488","messageId":"489","endLine":87,"endColumn":27},{"ruleId":"486","severity":1,"message":"487","line":143,"column":38,"nodeType":"488","messageId":"489","endLine":143,"endColumn":40},{"ruleId":"476","severity":1,"message":"495","line":1,"column":49,"nodeType":"478","messageId":"479","endLine":1,"endColumn":54},{"ruleId":"486","severity":1,"message":"487","line":73,"column":20,"nodeType":"488","messageId":"489","endLine":73,"endColumn":22},{"ruleId":"486","severity":1,"message":"487","line":77,"column":25,"nodeType":"488","messageId":"489","endLine":77,"endColumn":27},{"ruleId":"486","severity":1,"message":"487","line":83,"column":19,"nodeType":"488","messageId":"489","endLine":83,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":87,"column":25,"nodeType":"488","messageId":"489","endLine":87,"endColumn":27},{"ruleId":"476","severity":1,"message":"496","line":6,"column":7,"nodeType":"478","messageId":"479","endLine":6,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":10,"column":9,"nodeType":"478","messageId":"479","endLine":10,"endColumn":19},{"ruleId":"486","severity":1,"message":"487","line":48,"column":60,"nodeType":"488","messageId":"489","endLine":48,"endColumn":62},{"ruleId":"476","severity":1,"message":"498","line":3,"column":31,"nodeType":"478","messageId":"479","endLine":3,"endColumn":39},{"ruleId":"476","severity":1,"message":"499","line":2,"column":24,"nodeType":"478","messageId":"479","endLine":2,"endColumn":34},{"ruleId":"476","severity":1,"message":"500","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":22},{"ruleId":"476","severity":1,"message":"501","line":3,"column":24,"nodeType":"478","messageId":"479","endLine":3,"endColumn":38},{"ruleId":"476","severity":1,"message":"502","line":3,"column":40,"nodeType":"478","messageId":"479","endLine":3,"endColumn":60},{"ruleId":"476","severity":1,"message":"503","line":11,"column":9,"nodeType":"478","messageId":"479","endLine":11,"endColumn":16},{"ruleId":"476","severity":1,"message":"504","line":12,"column":26,"nodeType":"478","messageId":"479","endLine":12,"endColumn":31},{"ruleId":"476","severity":1,"message":"505","line":22,"column":33,"nodeType":"478","messageId":"479","endLine":22,"endColumn":55},{"ruleId":"506","severity":1,"message":"507","line":16,"column":8,"nodeType":"508","endLine":16,"endColumn":10,"suggestions":"509"},{"ruleId":"476","severity":1,"message":"510","line":1,"column":29,"nodeType":"478","messageId":"479","endLine":1,"endColumn":33},{"ruleId":"476","severity":1,"message":"511","line":1,"column":43,"nodeType":"478","messageId":"479","endLine":1,"endColumn":53},{"ruleId":"476","severity":1,"message":"496","line":11,"column":7,"nodeType":"478","messageId":"479","endLine":11,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":19,"column":7,"nodeType":"478","messageId":"479","endLine":19,"endColumn":17},{"ruleId":"486","severity":1,"message":"487","line":121,"column":19,"nodeType":"488","messageId":"489","endLine":121,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":141,"column":40,"nodeType":"488","messageId":"489","endLine":141,"endColumn":42},{"ruleId":"486","severity":1,"message":"487","line":143,"column":20,"nodeType":"488","messageId":"489","endLine":143,"endColumn":22},{"ruleId":"486","severity":1,"message":"487","line":150,"column":46,"nodeType":"488","messageId":"489","endLine":150,"endColumn":48},{"ruleId":"486","severity":1,"message":"487","line":158,"column":32,"nodeType":"488","messageId":"489","endLine":158,"endColumn":34},{"ruleId":"476","severity":1,"message":"512","line":163,"column":11,"nodeType":"478","messageId":"479","endLine":163,"endColumn":23},{"ruleId":"486","severity":1,"message":"487","line":164,"column":32,"nodeType":"488","messageId":"489","endLine":164,"endColumn":34},{"ruleId":"486","severity":1,"message":"513","line":209,"column":22,"nodeType":"488","messageId":"489","endLine":209,"endColumn":24},{"ruleId":"486","severity":1,"message":"513","line":213,"column":27,"nodeType":"488","messageId":"489","endLine":213,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":214,"column":27,"nodeType":"488","messageId":"489","endLine":214,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":214,"column":54,"nodeType":"488","messageId":"489","endLine":214,"endColumn":56},{"ruleId":"486","severity":1,"message":"513","line":221,"column":23,"nodeType":"488","messageId":"489","endLine":221,"endColumn":25},{"ruleId":"476","severity":1,"message":"510","line":1,"column":29,"nodeType":"478","messageId":"479","endLine":1,"endColumn":33},{"ruleId":"476","severity":1,"message":"511","line":1,"column":43,"nodeType":"478","messageId":"479","endLine":1,"endColumn":53},{"ruleId":"476","severity":1,"message":"514","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":14},{"ruleId":"476","severity":1,"message":"496","line":11,"column":7,"nodeType":"478","messageId":"479","endLine":11,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":19,"column":7,"nodeType":"478","messageId":"479","endLine":19,"endColumn":17},{"ruleId":"476","severity":1,"message":"515","line":32,"column":12,"nodeType":"478","messageId":"479","endLine":32,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":57,"column":25,"nodeType":"488","messageId":"489","endLine":57,"endColumn":27},{"ruleId":"476","severity":1,"message":"516","line":97,"column":11,"nodeType":"478","messageId":"479","endLine":97,"endColumn":23},{"ruleId":"476","severity":1,"message":"517","line":101,"column":9,"nodeType":"478","messageId":"479","endLine":101,"endColumn":24},{"ruleId":"486","severity":1,"message":"487","line":113,"column":19,"nodeType":"488","messageId":"489","endLine":113,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":133,"column":40,"nodeType":"488","messageId":"489","endLine":133,"endColumn":42},{"ruleId":"486","severity":1,"message":"487","line":135,"column":20,"nodeType":"488","messageId":"489","endLine":135,"endColumn":22},{"ruleId":"486","severity":1,"message":"487","line":141,"column":46,"nodeType":"488","messageId":"489","endLine":141,"endColumn":48},{"ruleId":"486","severity":1,"message":"487","line":149,"column":32,"nodeType":"488","messageId":"489","endLine":149,"endColumn":34},{"ruleId":"476","severity":1,"message":"512","line":154,"column":11,"nodeType":"478","messageId":"479","endLine":154,"endColumn":23},{"ruleId":"486","severity":1,"message":"487","line":155,"column":32,"nodeType":"488","messageId":"489","endLine":155,"endColumn":34},{"ruleId":"476","severity":1,"message":"518","line":158,"column":15,"nodeType":"478","messageId":"479","endLine":158,"endColumn":18},{"ruleId":"486","severity":1,"message":"513","line":200,"column":22,"nodeType":"488","messageId":"489","endLine":200,"endColumn":24},{"ruleId":"486","severity":1,"message":"513","line":204,"column":27,"nodeType":"488","messageId":"489","endLine":204,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":205,"column":27,"nodeType":"488","messageId":"489","endLine":205,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":205,"column":54,"nodeType":"488","messageId":"489","endLine":205,"endColumn":56},{"ruleId":"486","severity":1,"message":"513","line":213,"column":23,"nodeType":"488","messageId":"489","endLine":213,"endColumn":25},{"ruleId":"476","severity":1,"message":"519","line":1,"column":10,"nodeType":"478","messageId":"479","endLine":1,"endColumn":16},{"ruleId":"476","severity":1,"message":"520","line":1,"column":17,"nodeType":"478","messageId":"479","endLine":1,"endColumn":22},{"ruleId":"476","severity":1,"message":"521","line":1,"column":23,"nodeType":"478","messageId":"479","endLine":1,"endColumn":28},{"ruleId":"476","severity":1,"message":"510","line":1,"column":29,"nodeType":"478","messageId":"479","endLine":1,"endColumn":33},{"ruleId":"476","severity":1,"message":"522","line":1,"column":35,"nodeType":"478","messageId":"479","endLine":1,"endColumn":40},{"ruleId":"476","severity":1,"message":"511","line":1,"column":43,"nodeType":"478","messageId":"479","endLine":1,"endColumn":53},{"ruleId":"476","severity":1,"message":"523","line":2,"column":25,"nodeType":"478","messageId":"479","endLine":2,"endColumn":34},{"ruleId":"476","severity":1,"message":"524","line":3,"column":9,"nodeType":"478","messageId":"479","endLine":3,"endColumn":22},{"ruleId":"476","severity":1,"message":"514","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":14},{"ruleId":"476","severity":1,"message":"525","line":11,"column":9,"nodeType":"478","messageId":"479","endLine":11,"endColumn":11},{"ruleId":"506","severity":1,"message":"507","line":18,"column":8,"nodeType":"508","endLine":18,"endColumn":10,"suggestions":"526"},{"ruleId":"476","severity":1,"message":"527","line":5,"column":10,"nodeType":"478","messageId":"479","endLine":5,"endColumn":20},{"ruleId":"476","severity":1,"message":"528","line":7,"column":18,"nodeType":"478","messageId":"479","endLine":7,"endColumn":22},{"ruleId":"476","severity":1,"message":"498","line":7,"column":45,"nodeType":"478","messageId":"479","endLine":7,"endColumn":53},{"ruleId":"476","severity":1,"message":"529","line":7,"column":74,"nodeType":"478","messageId":"479","endLine":7,"endColumn":77},{"ruleId":"476","severity":1,"message":"530","line":7,"column":78,"nodeType":"478","messageId":"479","endLine":7,"endColumn":81},{"ruleId":"486","severity":1,"message":"487","line":52,"column":70,"nodeType":"488","messageId":"489","endLine":52,"endColumn":72},{"ruleId":"486","severity":1,"message":"487","line":65,"column":28,"nodeType":"488","messageId":"489","endLine":65,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":73,"column":19,"nodeType":"488","messageId":"489","endLine":73,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":86,"column":34,"nodeType":"488","messageId":"489","endLine":86,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":92,"column":35,"nodeType":"488","messageId":"489","endLine":92,"endColumn":37},{"ruleId":"486","severity":1,"message":"487","line":95,"column":19,"nodeType":"488","messageId":"489","endLine":95,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":309,"column":27,"nodeType":"488","messageId":"489","endLine":309,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":313,"column":47,"nodeType":"488","messageId":"489","endLine":313,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":328,"column":27,"nodeType":"488","messageId":"489","endLine":328,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":332,"column":47,"nodeType":"488","messageId":"489","endLine":332,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":349,"column":43,"nodeType":"488","messageId":"489","endLine":349,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":366,"column":43,"nodeType":"488","messageId":"489","endLine":366,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":395,"column":35,"nodeType":"488","messageId":"489","endLine":395,"endColumn":37},{"ruleId":"486","severity":1,"message":"487","line":397,"column":36,"nodeType":"488","messageId":"489","endLine":397,"endColumn":38},{"ruleId":"476","severity":1,"message":"527","line":5,"column":10,"nodeType":"478","messageId":"479","endLine":5,"endColumn":20},{"ruleId":"476","severity":1,"message":"528","line":7,"column":18,"nodeType":"478","messageId":"479","endLine":7,"endColumn":22},{"ruleId":"476","severity":1,"message":"498","line":7,"column":45,"nodeType":"478","messageId":"479","endLine":7,"endColumn":53},{"ruleId":"476","severity":1,"message":"529","line":7,"column":74,"nodeType":"478","messageId":"479","endLine":7,"endColumn":77},{"ruleId":"476","severity":1,"message":"530","line":7,"column":78,"nodeType":"478","messageId":"479","endLine":7,"endColumn":81},{"ruleId":"486","severity":1,"message":"487","line":52,"column":70,"nodeType":"488","messageId":"489","endLine":52,"endColumn":72},{"ruleId":"486","severity":1,"message":"487","line":65,"column":28,"nodeType":"488","messageId":"489","endLine":65,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":73,"column":19,"nodeType":"488","messageId":"489","endLine":73,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":86,"column":34,"nodeType":"488","messageId":"489","endLine":86,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":92,"column":35,"nodeType":"488","messageId":"489","endLine":92,"endColumn":37},{"ruleId":"486","severity":1,"message":"487","line":95,"column":19,"nodeType":"488","messageId":"489","endLine":95,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":309,"column":27,"nodeType":"488","messageId":"489","endLine":309,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":313,"column":47,"nodeType":"488","messageId":"489","endLine":313,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":328,"column":27,"nodeType":"488","messageId":"489","endLine":328,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":332,"column":47,"nodeType":"488","messageId":"489","endLine":332,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":349,"column":43,"nodeType":"488","messageId":"489","endLine":349,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":366,"column":43,"nodeType":"488","messageId":"489","endLine":366,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":395,"column":35,"nodeType":"488","messageId":"489","endLine":395,"endColumn":37},{"ruleId":"486","severity":1,"message":"487","line":397,"column":36,"nodeType":"488","messageId":"489","endLine":397,"endColumn":38},{"ruleId":"486","severity":1,"message":"487","line":45,"column":17,"nodeType":"488","messageId":"489","endLine":45,"endColumn":19},{"ruleId":"486","severity":1,"message":"487","line":81,"column":38,"nodeType":"488","messageId":"489","endLine":81,"endColumn":40},{"ruleId":"486","severity":1,"message":"487","line":83,"column":18,"nodeType":"488","messageId":"489","endLine":83,"endColumn":20},{"ruleId":"486","severity":1,"message":"487","line":89,"column":44,"nodeType":"488","messageId":"489","endLine":89,"endColumn":46},{"ruleId":"486","severity":1,"message":"487","line":97,"column":30,"nodeType":"488","messageId":"489","endLine":97,"endColumn":32},{"ruleId":"486","severity":1,"message":"487","line":103,"column":30,"nodeType":"488","messageId":"489","endLine":103,"endColumn":32},{"ruleId":"476","severity":1,"message":"496","line":13,"column":7,"nodeType":"478","messageId":"479","endLine":13,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":21,"column":9,"nodeType":"478","messageId":"479","endLine":21,"endColumn":19},{"ruleId":"476","severity":1,"message":"531","line":32,"column":12,"nodeType":"478","messageId":"479","endLine":32,"endColumn":16},{"ruleId":"486","severity":1,"message":"487","line":101,"column":28,"nodeType":"488","messageId":"489","endLine":101,"endColumn":30},{"ruleId":"476","severity":1,"message":"532","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"529","line":1,"column":28,"nodeType":"478","messageId":"479","endLine":1,"endColumn":31},{"ruleId":"476","severity":1,"message":"530","line":1,"column":33,"nodeType":"478","messageId":"479","endLine":1,"endColumn":36},{"ruleId":"476","severity":1,"message":"533","line":2,"column":10,"nodeType":"478","messageId":"479","endLine":2,"endColumn":25},{"ruleId":"476","severity":1,"message":"534","line":2,"column":27,"nodeType":"478","messageId":"479","endLine":2,"endColumn":44},{"ruleId":"476","severity":1,"message":"535","line":5,"column":21,"nodeType":"478","messageId":"479","endLine":5,"endColumn":26},{"ruleId":"476","severity":1,"message":"536","line":5,"column":27,"nodeType":"478","messageId":"479","endLine":5,"endColumn":31},{"ruleId":"476","severity":1,"message":"537","line":5,"column":32,"nodeType":"478","messageId":"479","endLine":5,"endColumn":37},{"ruleId":"476","severity":1,"message":"538","line":5,"column":38,"nodeType":"478","messageId":"479","endLine":5,"endColumn":45},{"ruleId":"506","severity":1,"message":"539","line":15,"column":13,"nodeType":"540","endLine":17,"endColumn":4},{"ruleId":"476","severity":1,"message":"496","line":8,"column":7,"nodeType":"478","messageId":"479","endLine":8,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":16,"column":9,"nodeType":"478","messageId":"479","endLine":16,"endColumn":19},{"ruleId":"486","severity":1,"message":"487","line":93,"column":23,"nodeType":"488","messageId":"489","endLine":93,"endColumn":25},{"ruleId":"476","severity":1,"message":"511","line":2,"column":45,"nodeType":"478","messageId":"479","endLine":2,"endColumn":55},{"ruleId":"476","severity":1,"message":"541","line":2,"column":66,"nodeType":"478","messageId":"479","endLine":2,"endColumn":76},{"ruleId":"476","severity":1,"message":"542","line":3,"column":45,"nodeType":"478","messageId":"479","endLine":3,"endColumn":52},{"ruleId":"476","severity":1,"message":"543","line":5,"column":9,"nodeType":"478","messageId":"479","endLine":5,"endColumn":22},{"ruleId":"476","severity":1,"message":"496","line":10,"column":11,"nodeType":"478","messageId":"479","endLine":10,"endColumn":17},{"ruleId":"476","severity":1,"message":"497","line":18,"column":11,"nodeType":"478","messageId":"479","endLine":18,"endColumn":21},{"ruleId":"476","severity":1,"message":"544","line":30,"column":12,"nodeType":"478","messageId":"479","endLine":30,"endColumn":20},{"ruleId":"476","severity":1,"message":"545","line":35,"column":11,"nodeType":"478","messageId":"479","endLine":35,"endColumn":18},{"ruleId":"486","severity":1,"message":"487","line":37,"column":19,"nodeType":"488","messageId":"489","endLine":37,"endColumn":21},{"ruleId":"476","severity":1,"message":"546","line":46,"column":11,"nodeType":"478","messageId":"479","endLine":46,"endColumn":17},{"ruleId":"486","severity":1,"message":"487","line":107,"column":17,"nodeType":"488","messageId":"489","endLine":107,"endColumn":19},{"ruleId":"486","severity":1,"message":"487","line":107,"column":34,"nodeType":"488","messageId":"489","endLine":107,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":140,"column":42,"nodeType":"488","messageId":"489","endLine":140,"endColumn":44},{"ruleId":"486","severity":1,"message":"487","line":142,"column":22,"nodeType":"488","messageId":"489","endLine":142,"endColumn":24},{"ruleId":"486","severity":1,"message":"487","line":148,"column":48,"nodeType":"488","messageId":"489","endLine":148,"endColumn":50},{"ruleId":"486","severity":1,"message":"487","line":156,"column":34,"nodeType":"488","messageId":"489","endLine":156,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":162,"column":34,"nodeType":"488","messageId":"489","endLine":162,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":240,"column":110,"nodeType":"488","messageId":"489","endLine":240,"endColumn":112},{"ruleId":"486","severity":1,"message":"487","line":242,"column":32,"nodeType":"488","messageId":"489","endLine":242,"endColumn":34},{"ruleId":"486","severity":1,"message":"487","line":246,"column":56,"nodeType":"488","messageId":"489","endLine":246,"endColumn":58},{"ruleId":"486","severity":1,"message":"487","line":251,"column":52,"nodeType":"488","messageId":"489","endLine":251,"endColumn":54},{"ruleId":"486","severity":1,"message":"487","line":28,"column":28,"nodeType":"488","messageId":"489","endLine":28,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":45,"column":28,"nodeType":"488","messageId":"489","endLine":45,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":60,"column":28,"nodeType":"488","messageId":"489","endLine":60,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":77,"column":28,"nodeType":"488","messageId":"489","endLine":77,"endColumn":30},{"ruleId":"476","severity":1,"message":"510","line":2,"column":29,"nodeType":"478","messageId":"479","endLine":2,"endColumn":33},{"ruleId":"476","severity":1,"message":"511","line":2,"column":43,"nodeType":"478","messageId":"479","endLine":2,"endColumn":53},{"ruleId":"476","severity":1,"message":"496","line":10,"column":11,"nodeType":"478","messageId":"479","endLine":10,"endColumn":17},{"ruleId":"476","severity":1,"message":"497","line":18,"column":11,"nodeType":"478","messageId":"479","endLine":18,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":37,"column":19,"nodeType":"488","messageId":"489","endLine":37,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":94,"column":32,"nodeType":"488","messageId":"489","endLine":94,"endColumn":34},{"ruleId":"486","severity":1,"message":"487","line":139,"column":42,"nodeType":"488","messageId":"489","endLine":139,"endColumn":44},{"ruleId":"486","severity":1,"message":"487","line":141,"column":22,"nodeType":"488","messageId":"489","endLine":141,"endColumn":24},{"ruleId":"486","severity":1,"message":"487","line":148,"column":48,"nodeType":"488","messageId":"489","endLine":148,"endColumn":50},{"ruleId":"486","severity":1,"message":"487","line":156,"column":34,"nodeType":"488","messageId":"489","endLine":156,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":162,"column":34,"nodeType":"488","messageId":"489","endLine":162,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":27,"column":28,"nodeType":"488","messageId":"489","endLine":27,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":44,"column":28,"nodeType":"488","messageId":"489","endLine":44,"endColumn":30},{"ruleId":"476","severity":1,"message":"527","line":5,"column":10,"nodeType":"478","messageId":"479","endLine":5,"endColumn":20},{"ruleId":"476","severity":1,"message":"547","line":6,"column":27,"nodeType":"478","messageId":"479","endLine":6,"endColumn":41},{"ruleId":"476","severity":1,"message":"528","line":7,"column":18,"nodeType":"478","messageId":"479","endLine":7,"endColumn":22},{"ruleId":"476","severity":1,"message":"498","line":7,"column":45,"nodeType":"478","messageId":"479","endLine":7,"endColumn":53},{"ruleId":"476","severity":1,"message":"511","line":7,"column":55,"nodeType":"478","messageId":"479","endLine":7,"endColumn":65},{"ruleId":"476","severity":1,"message":"529","line":7,"column":74,"nodeType":"478","messageId":"479","endLine":7,"endColumn":77},{"ruleId":"476","severity":1,"message":"530","line":7,"column":78,"nodeType":"478","messageId":"479","endLine":7,"endColumn":81},{"ruleId":"476","severity":1,"message":"514","line":10,"column":8,"nodeType":"478","messageId":"479","endLine":10,"endColumn":14},{"ruleId":"476","severity":1,"message":"548","line":34,"column":7,"nodeType":"478","messageId":"479","endLine":34,"endColumn":13},{"ruleId":"486","severity":1,"message":"487","line":52,"column":70,"nodeType":"488","messageId":"489","endLine":52,"endColumn":72},{"ruleId":"486","severity":1,"message":"487","line":70,"column":30,"nodeType":"488","messageId":"489","endLine":70,"endColumn":32},{"ruleId":"486","severity":1,"message":"487","line":77,"column":20,"nodeType":"488","messageId":"489","endLine":77,"endColumn":22},{"ruleId":"486","severity":1,"message":"487","line":84,"column":30,"nodeType":"488","messageId":"489","endLine":84,"endColumn":32},{"ruleId":"486","severity":1,"message":"487","line":93,"column":21,"nodeType":"488","messageId":"489","endLine":93,"endColumn":23},{"ruleId":"486","severity":1,"message":"487","line":327,"column":27,"nodeType":"488","messageId":"489","endLine":327,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":331,"column":47,"nodeType":"488","messageId":"489","endLine":331,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":350,"column":43,"nodeType":"488","messageId":"489","endLine":350,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":365,"column":43,"nodeType":"488","messageId":"489","endLine":365,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":379,"column":43,"nodeType":"488","messageId":"489","endLine":379,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":405,"column":43,"nodeType":"488","messageId":"489","endLine":405,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":415,"column":47,"nodeType":"488","messageId":"489","endLine":415,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":444,"column":23,"nodeType":"488","messageId":"489","endLine":444,"endColumn":25},{"ruleId":"476","severity":1,"message":"549","line":5,"column":10,"nodeType":"478","messageId":"479","endLine":5,"endColumn":16},{"ruleId":"550","severity":1,"message":"551","line":30,"column":19,"nodeType":"552","messageId":"553","endLine":30,"endColumn":25},{"ruleId":"550","severity":1,"message":"551","line":33,"column":17,"nodeType":"552","messageId":"553","endLine":33,"endColumn":23},{"ruleId":"550","severity":1,"message":"551","line":36,"column":17,"nodeType":"552","messageId":"553","endLine":36,"endColumn":23},{"ruleId":"486","severity":1,"message":"487","line":46,"column":23,"nodeType":"488","messageId":"489","endLine":46,"endColumn":25},{"ruleId":"486","severity":1,"message":"487","line":120,"column":36,"nodeType":"488","messageId":"489","endLine":120,"endColumn":38},{"ruleId":"486","severity":1,"message":"487","line":122,"column":16,"nodeType":"488","messageId":"489","endLine":122,"endColumn":18},{"ruleId":"486","severity":1,"message":"487","line":128,"column":42,"nodeType":"488","messageId":"489","endLine":128,"endColumn":44},{"ruleId":"486","severity":1,"message":"487","line":136,"column":28,"nodeType":"488","messageId":"489","endLine":136,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":142,"column":28,"nodeType":"488","messageId":"489","endLine":142,"endColumn":30},{"ruleId":"476","severity":1,"message":"554","line":1,"column":13,"nodeType":"478","messageId":"479","endLine":1,"endColumn":17},{"ruleId":"476","severity":1,"message":"543","line":1,"column":18,"nodeType":"478","messageId":"479","endLine":1,"endColumn":31},{"ruleId":"476","severity":1,"message":"549","line":4,"column":10,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"486","severity":1,"message":"487","line":28,"column":21,"nodeType":"488","messageId":"489","endLine":28,"endColumn":23},{"ruleId":"506","severity":1,"message":"555","line":43,"column":4,"nodeType":"508","endLine":43,"endColumn":6,"suggestions":"556"},{"ruleId":"486","severity":1,"message":"487","line":8,"column":62,"nodeType":"488","messageId":"489","endLine":8,"endColumn":64},{"ruleId":"486","severity":1,"message":"487","line":9,"column":62,"nodeType":"488","messageId":"489","endLine":9,"endColumn":64},{"ruleId":"486","severity":1,"message":"487","line":10,"column":62,"nodeType":"488","messageId":"489","endLine":10,"endColumn":64},{"ruleId":"486","severity":1,"message":"487","line":31,"column":35,"nodeType":"488","messageId":"489","endLine":31,"endColumn":37},{"ruleId":"486","severity":1,"message":"487","line":39,"column":31,"nodeType":"488","messageId":"489","endLine":39,"endColumn":33},{"ruleId":"486","severity":1,"message":"487","line":51,"column":31,"nodeType":"488","messageId":"489","endLine":51,"endColumn":33},{"ruleId":"486","severity":1,"message":"513","line":101,"column":26,"nodeType":"488","messageId":"489","endLine":101,"endColumn":28},{"ruleId":"486","severity":1,"message":"487","line":103,"column":21,"nodeType":"488","messageId":"489","endLine":103,"endColumn":23},{"ruleId":"486","severity":1,"message":"487","line":128,"column":24,"nodeType":"488","messageId":"489","endLine":128,"endColumn":26},{"ruleId":"486","severity":1,"message":"487","line":132,"column":42,"nodeType":"488","messageId":"489","endLine":132,"endColumn":44},{"ruleId":"486","severity":1,"message":"487","line":148,"column":38,"nodeType":"488","messageId":"489","endLine":148,"endColumn":40},{"ruleId":"486","severity":1,"message":"487","line":164,"column":38,"nodeType":"488","messageId":"489","endLine":164,"endColumn":40},{"ruleId":"486","severity":1,"message":"487","line":177,"column":24,"nodeType":"488","messageId":"489","endLine":177,"endColumn":26},{"ruleId":"486","severity":1,"message":"487","line":181,"column":42,"nodeType":"488","messageId":"489","endLine":181,"endColumn":44},{"ruleId":"486","severity":1,"message":"487","line":198,"column":38,"nodeType":"488","messageId":"489","endLine":198,"endColumn":40},{"ruleId":"476","severity":1,"message":"510","line":1,"column":29,"nodeType":"478","messageId":"479","endLine":1,"endColumn":33},{"ruleId":"476","severity":1,"message":"511","line":1,"column":43,"nodeType":"478","messageId":"479","endLine":1,"endColumn":53},{"ruleId":"476","severity":1,"message":"496","line":11,"column":7,"nodeType":"478","messageId":"479","endLine":11,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":19,"column":7,"nodeType":"478","messageId":"479","endLine":19,"endColumn":17},{"ruleId":"486","severity":1,"message":"487","line":127,"column":19,"nodeType":"488","messageId":"489","endLine":127,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":148,"column":40,"nodeType":"488","messageId":"489","endLine":148,"endColumn":42},{"ruleId":"486","severity":1,"message":"487","line":150,"column":20,"nodeType":"488","messageId":"489","endLine":150,"endColumn":22},{"ruleId":"486","severity":1,"message":"487","line":156,"column":46,"nodeType":"488","messageId":"489","endLine":156,"endColumn":48},{"ruleId":"486","severity":1,"message":"487","line":164,"column":32,"nodeType":"488","messageId":"489","endLine":164,"endColumn":34},{"ruleId":"476","severity":1,"message":"512","line":169,"column":11,"nodeType":"478","messageId":"479","endLine":169,"endColumn":23},{"ruleId":"486","severity":1,"message":"487","line":170,"column":32,"nodeType":"488","messageId":"489","endLine":170,"endColumn":34},{"ruleId":"486","severity":1,"message":"513","line":216,"column":22,"nodeType":"488","messageId":"489","endLine":216,"endColumn":24},{"ruleId":"486","severity":1,"message":"513","line":220,"column":27,"nodeType":"488","messageId":"489","endLine":220,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":221,"column":27,"nodeType":"488","messageId":"489","endLine":221,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":221,"column":54,"nodeType":"488","messageId":"489","endLine":221,"endColumn":56},{"ruleId":"486","severity":1,"message":"513","line":228,"column":23,"nodeType":"488","messageId":"489","endLine":228,"endColumn":25},{"ruleId":"476","severity":1,"message":"527","line":5,"column":10,"nodeType":"478","messageId":"479","endLine":5,"endColumn":20},{"ruleId":"476","severity":1,"message":"528","line":7,"column":18,"nodeType":"478","messageId":"479","endLine":7,"endColumn":22},{"ruleId":"476","severity":1,"message":"498","line":7,"column":45,"nodeType":"478","messageId":"479","endLine":7,"endColumn":53},{"ruleId":"476","severity":1,"message":"511","line":7,"column":55,"nodeType":"478","messageId":"479","endLine":7,"endColumn":65},{"ruleId":"476","severity":1,"message":"529","line":7,"column":74,"nodeType":"478","messageId":"479","endLine":7,"endColumn":77},{"ruleId":"476","severity":1,"message":"530","line":7,"column":78,"nodeType":"478","messageId":"479","endLine":7,"endColumn":81},{"ruleId":"476","severity":1,"message":"548","line":33,"column":7,"nodeType":"478","messageId":"479","endLine":33,"endColumn":13},{"ruleId":"486","severity":1,"message":"487","line":52,"column":70,"nodeType":"488","messageId":"489","endLine":52,"endColumn":72},{"ruleId":"486","severity":1,"message":"487","line":65,"column":28,"nodeType":"488","messageId":"489","endLine":65,"endColumn":30},{"ruleId":"486","severity":1,"message":"487","line":74,"column":19,"nodeType":"488","messageId":"489","endLine":74,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":87,"column":34,"nodeType":"488","messageId":"489","endLine":87,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":93,"column":39,"nodeType":"488","messageId":"489","endLine":93,"endColumn":41},{"ruleId":"486","severity":1,"message":"487","line":96,"column":19,"nodeType":"488","messageId":"489","endLine":96,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":310,"column":27,"nodeType":"488","messageId":"489","endLine":310,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":314,"column":47,"nodeType":"488","messageId":"489","endLine":314,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":329,"column":27,"nodeType":"488","messageId":"489","endLine":329,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":333,"column":47,"nodeType":"488","messageId":"489","endLine":333,"endColumn":49},{"ruleId":"486","severity":1,"message":"487","line":350,"column":43,"nodeType":"488","messageId":"489","endLine":350,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":365,"column":43,"nodeType":"488","messageId":"489","endLine":365,"endColumn":45},{"ruleId":"486","severity":1,"message":"487","line":398,"column":35,"nodeType":"488","messageId":"489","endLine":398,"endColumn":37},{"ruleId":"486","severity":1,"message":"487","line":400,"column":36,"nodeType":"488","messageId":"489","endLine":400,"endColumn":38},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["557"],"no-negated-in-lhs",["558"],["557"],["558"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ActiveRegister' is defined but never used.","'AddActive' is defined but never used.","'CourseRegister' is defined but never used.","'AddCourse' is defined but never used.","'AddShop' is defined but never used.","'Radio' is defined but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'Checkbox' is defined but never used.","'Breadcrumb' is defined but never used.","'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'SubMenu' is assigned a value but never used.","'Sider' is assigned a value but never used.","'setDefaultSelectedKeys' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["559"],"'Form' is defined but never used.","'DatePicker' is defined but never used.","'onPressEnter' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'moment' is defined but never used.","'isRegModalVisible' is assigned a value but never used.","'showRegModal' is assigned a value but never used.","'handleRegCancel' is assigned a value but never used.","'res' is assigned a value but never used.","'Button' is defined but never used.","'Table' is defined but never used.","'Modal' is defined but never used.","'Input' is defined but never used.","'useEffect' is defined but never used.","'getCourseList' is defined but never used.","'fn' is assigned a value but never used.",["560"],"'ImageUtils' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'page' is assigned a value but never used.","'Statistic' is defined but never used.","'ArrowUpOutlined' is defined but never used.","'ArrowDownOutlined' is defined but never used.","'Chart' is defined but never used.","'Line' is defined but never used.","'Point' is defined but never used.","'Tooltip' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Popconfirm' is defined but never used.","'getShop' is defined but never used.","'ConfigBaseURL' is defined but never used.","'operator' is assigned a value but never used.","'confirm' is assigned a value but never used.","'cancel' is assigned a value but never used.","'DeleteOutlined' is defined but never used.","'config' is assigned a value but never used.","'Option' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'post' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["561"],"no-global-assign","no-unsafe-negation",{"desc":"562","fix":"563"},{"desc":"562","fix":"564"},{"desc":"565","fix":"566"},"Update the dependencies array to be: [getData]",{"range":"567","text":"568"},{"range":"569","text":"568"},"Update the dependencies array to be: [props]",{"range":"570","text":"571"},[520,522],"[getData]",[524,526],[821,823],"[props]"]